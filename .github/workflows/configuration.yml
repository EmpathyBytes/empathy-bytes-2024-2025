# Sample workflow for building and deploying a Gatsby site to GitHub Pages
#
# To get started with Gatsby see: https://www.gatsbyjs.com/docs/quick-start/
#
name: Deploy Gatsby site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Runs on pull requests to generate the deployment preview
  pull_request:
    types: [opened, synchronize, reopened]

  # Allows you to run the workflow manually from Actions
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to Deploy?'
        required: true
        default: 'master'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject pathPrefix in your Gatsby configuration file.
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: gatsby
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('**/package-lock.json', '**/gatsby-config.js') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-
      - name: Install dependencies
        run: npm install
      - name: Install parcel watcher
        run: npm install @parcel/watcher
      - name: Rebuild dependencies
        run: npm rebuild
      - name: Clear Gatsby cache
        run: npx gatsby clean
      - name: Build with Gatsby
        env:
          PREFIX_PATHS: 'true'
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: gatsby-build
          path: ./public

  # Deployment job
  deploy:
    name: Deploy PR Preview
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Set PR Number
        id: pr
        run: echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Download Build site
        uses: actions/download-pages-artifact@v3
        with: 
          name: gatsby-build
          path: ./public

      - name: Deploy to fork's gh-pages
        run: | 
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git clone --depth 1 --branch gh-pages https://github.com/${{ github.repository }}.git preview-deploy
          cd preview-deploy
          mkdir -p previews/pr-${{ env.PR_NUMBER }}
          rm -rf previews/pr-${{ env.PR_NUMBER }}/*
          cp -r ../public/* previews/pr-${{ env.PR_NUMBER }}/
          git add . 
          git commit -m "PR #${{ env.PR_NUMBER }} preview deployment from Github Actions"
          git push origin gh-pages

  cleanup-preview:
    name: Cleanup PR Preview
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Set PR number
        run: echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Remove preview from fork's gh-pages
        run : | 
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git clone --depth 1 --branch gh-pages https://github.com/${{ github.repository }}.git preview-deploy
          cd preview-deploy
          rm -r previews/pr-${{ env.PR_NUMBER }}
          git add .
          git commit -m "Remove PR #${{ env.PR_NUMBER }} preview on PR close"
          git push origin gh-pages