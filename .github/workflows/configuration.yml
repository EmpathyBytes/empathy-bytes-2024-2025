# Sample workflow for building and deploying a Gatsby site to GitHub Pages
#
# To get started with Gatsby see: https://www.gatsbyjs.com/docs/quick-start/
#
name: Deploy Gatsby site to GitHub Pages with PR previews

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Build site
        run: npm run build
      - name: Deploy preview
        if: github.event_name == 'pull_request'
        run: |
          # Deploy to a preview subdirectory based on PR number
          echo "Deploying to preview-${{ github.event.pull_request.number }}"
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git remote set-url origin https://github.com/${{ github.repository }}.git
          git checkout gh-pages
          mkdir -p preview-${{ github.event.pull_request.number }}
          cp -r public/* preview-${{ github.event.pull_request.number }}
          git add .
          git commit -m "Deploy PR preview #${{ github.event.pull_request.number }}"
          git push origin gh-pages

  post-comment:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: build
    steps:
      - name: Post PR comment with preview link
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = ${{ github.event.pull_request.number }};
            const previewLink = `https://<username>.github.io/<repository>/preview-${prNumber}/`;
            const comment = `Preview deployed for PR #${prNumber}: ${previewLink}`;
            
            const issue_comment = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            };

            await github.rest.issues.createComment(issue_comment);

  cleanup-preview:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event.pull_request.state == 'closed'
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Remove PR Preview folder
        run: |
          git rm -r --ignore-unmatch preview-${{ github.event.pull_request.number }}
          git commit -m "Cleanup preview for PR #${{ github.event.pull_request.number }}"
          git push origin gh-pages
