{"version":3,"file":"ebaf4c27-30d26f015fc3ae1c1a1d.js","mappings":"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","sources":["webpack://empathy-bytes-2023/./node_modules/framer-motion/dist/framer-motion.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar React = require('react');\nvar heyListen = require('hey-listen');\nvar styleValueTypes = require('style-value-types');\nvar popmotion = require('popmotion');\nvar sync = require('framesync');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () {\n                        return e[k];\n                    }\n                });\n            }\n        });\n    }\n    n['default'] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\nvar createDefinition = function (propNames) { return ({\n    isEnabled: function (props) { return propNames.some(function (name) { return !!props[name]; }); },\n}); };\nvar featureDefinitions = {\n    measureLayout: createDefinition([\n        \"layout\",\n        \"layoutId\",\n        \"drag\",\n        \"_layoutResetTransform\",\n    ]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    layoutAnimation: createDefinition([\"layout\", \"layoutId\"]),\n};\nfunction loadFeatures(features) {\n    for (var key in features) {\n        var Component = features[key];\n        if (Component !== null)\n            featureDefinitions[key].Component = Component;\n    }\n}\n\nvar LazyContext = React.createContext({ strict: false });\n\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    var features = [];\n    var lazyContext = React.useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        lazyContext.strict) {\n        heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (var i = 0; i < numFeatures; i++) {\n        var name_1 = featureNames[i];\n        var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React__namespace.createElement(Component, tslib.__assign({ key: name_1 }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\n/**\n * @public\n */\nvar MotionConfigContext = React.createContext({\n    transformPagePoint: function (p) { return p; },\n    isStatic: false,\n});\n\nvar MotionContext = React.createContext({});\nfunction useVisualElementContext() {\n    return React.useContext(MotionContext).visualElement;\n}\n\n/**\n * @public\n */\nvar PresenceContext = React.createContext(null);\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    var ref = React.useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    var context = React.useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useOpaqueId when released in React\n    var id = useUniqueId();\n    React.useEffect(function () { return register(id); }, []);\n    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(React.useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useUniqueId = function () { return useConstant(incrementId); };\n\n/**\n * @internal\n */\nvar LayoutGroupContext = React.createContext(null);\n\nvar isBrowser = typeof window !== \"undefined\";\n\nvar useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\nfunction useLayoutId(_a) {\n    var layoutId = _a.layoutId;\n    var layoutGroupId = React.useContext(LayoutGroupContext);\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    var config = React.useContext(MotionConfigContext);\n    var lazyContext = React.useContext(LazyContext);\n    var parent = useVisualElementContext();\n    var presenceContext = React.useContext(PresenceContext);\n    var layoutId = useLayoutId(props);\n    var visualElementRef = React.useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    if (!createVisualElement)\n        createVisualElement = lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState: visualState,\n            parent: parent,\n            props: tslib.__assign(tslib.__assign({}, props), { layoutId: layoutId }),\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n        });\n    }\n    var visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(function () {\n        if (!visualElement)\n            return;\n        visualElement.setProps(tslib.__assign(tslib.__assign(tslib.__assign({}, config), props), { layoutId: layoutId }));\n        visualElement.isPresent = isPresent(presenceContext);\n        visualElement.isPresenceRoot =\n            !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);\n        /**\n         * Fire a render to ensure the latest state is reflected on-screen.\n         */\n        visualElement.syncRender();\n    });\n    React.useEffect(function () {\n        var _a;\n        if (!visualElement)\n            return;\n        /**\n         * In a future refactor we can replace the features-as-components and\n         * have this loop through them all firing \"effect\" listeners\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n    });\n    useIsomorphicLayoutEffect(function () { return function () { return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(); }; }, []);\n    return visualElement;\n}\n\nfunction isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return React.useCallback(function (instance) {\n        var _a;\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\n/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    var current = {};\n    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity$1(visualElement) {\n    var velocity = {};\n    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n    var _a;\n    if (currentValues === void 0) { currentValues = {}; }\n    if (currentVelocity === void 0) { currentVelocity = {}; }\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    return typeof definition === \"function\"\n        ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)\n        : definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    var props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n    if (checkIfControllingVariants(props)) {\n        var initial = props.initial, animate = props.animate;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props, isStatic) {\n    var _a = getCurrentTreeVariants(props, React.useContext(MotionContext)), initial = _a.initial, animate = _a.animate;\n    return React.useMemo(function () { return ({ initial: initial, animate: animate }); }, \n    /**\n     * Only break memoisation in static mode\n     */\n    isStatic\n        ? [\n            variantLabelsAsDependency(initial),\n            variantLabelsAsDependency(animate),\n        ]\n        : []);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n *\n * @internal\n */\nfunction createMotionComponent(_a) {\n    var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, useRender = _a.useRender, useVisualState = _a.useVisualState, Component = _a.Component;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we're rendering in a static environment, we only visually update the component\n         * as a result of a React-rerender rather than interactions or animations. This\n         * means we don't need to load additional memory structures like VisualElement,\n         * or any gesture/animation features.\n         */\n        var isStatic = React.useContext(MotionConfigContext).isStatic;\n        var features = null;\n        /**\n         * Create the tree context. This is memoized and will only trigger renders\n         * when the current tree variant changes in static mode.\n         */\n        var context = useCreateMotionContext(props, isStatic);\n        /**\n         *\n         */\n        var visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, props, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             *\n             * TODO: The intention is to move these away from a React-centric to a\n             * VisualElement-centric lifecycle scheme.\n             */\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React__namespace.createElement(React__namespace.Fragment, null,\n            React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic)),\n            features));\n    }\n    return React.forwardRef(MotionComponent);\n}\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig) {\n        if (customMotionComponentConfig === void 0) { customMotionComponentConfig = {}; }\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    var componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: function (_target, key) {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\n/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nvar lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nvar valueScaleCorrection = {};\n/**\n * @internal\n */\nfunction addScaleCorrection(correctors) {\n    for (var key in correctors) {\n        valueScaleCorrection[key] = correctors[key];\n    }\n}\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function (operationKey) {\n    return transformAxes.forEach(function (axesKey) {\n        return transformProps.push(operationKey + axesKey);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\nvar transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n    return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nfunction isForcedMotionValue(key, _a) {\n    var layout = _a.layout, layoutId = _a.layoutId;\n    return (isTransformProp(key) ||\n        isTransformOriginProp(key) ||\n        ((layout || layoutId !== undefined) &&\n            (!!valueScaleCorrection[key] || key === \"opacity\")));\n}\n\nvar isMotionValue = function (value) {\n    return value !== null && typeof value === \"object\" && value.getVelocity;\n};\n\nvar translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(_a, _b, transformIsDefault, transformTemplate) {\n    var transform = _a.transform, transformKeys = _a.transformKeys;\n    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;\n    // The transform string we're going to build into.\n    var transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Track whether the defined transform has a defined z so we don't add a\n    // second to enable hardware acceleration\n    var transformHasZ = false;\n    // Loop over each transform and build them into transformString\n    var numTransformKeys = transformKeys.length;\n    for (var i = 0; i < numTransformKeys; i++) {\n        var key = transformKeys[i];\n        transformString += (translateAlias[key] || key) + \"(\" + transform[key] + \") \";\n        if (key === \"z\")\n            transformHasZ = true;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += \"translateZ(0)\";\n    }\n    else {\n        transformString = transformString.trim();\n    }\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\nfunction buildTransformOrigin(_a) {\n    var _b = _a.originX, originX = _b === void 0 ? \"50%\" : _b, _c = _a.originY, originY = _c === void 0 ? \"50%\" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;\n    return originX + \" \" + originY + \" \" + originZ;\n}\n\n/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable$1(key) {\n    return key.startsWith(\"--\");\n}\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nvar getValueAsType = function (value, type) {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nvar int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), { transform: Math.round });\n\nvar numberValueTypes = {\n    // Border props\n    borderWidth: styleValueTypes.px,\n    borderTopWidth: styleValueTypes.px,\n    borderRightWidth: styleValueTypes.px,\n    borderBottomWidth: styleValueTypes.px,\n    borderLeftWidth: styleValueTypes.px,\n    borderRadius: styleValueTypes.px,\n    radius: styleValueTypes.px,\n    borderTopLeftRadius: styleValueTypes.px,\n    borderTopRightRadius: styleValueTypes.px,\n    borderBottomRightRadius: styleValueTypes.px,\n    borderBottomLeftRadius: styleValueTypes.px,\n    // Positioning props\n    width: styleValueTypes.px,\n    maxWidth: styleValueTypes.px,\n    height: styleValueTypes.px,\n    maxHeight: styleValueTypes.px,\n    size: styleValueTypes.px,\n    top: styleValueTypes.px,\n    right: styleValueTypes.px,\n    bottom: styleValueTypes.px,\n    left: styleValueTypes.px,\n    // Spacing props\n    padding: styleValueTypes.px,\n    paddingTop: styleValueTypes.px,\n    paddingRight: styleValueTypes.px,\n    paddingBottom: styleValueTypes.px,\n    paddingLeft: styleValueTypes.px,\n    margin: styleValueTypes.px,\n    marginTop: styleValueTypes.px,\n    marginRight: styleValueTypes.px,\n    marginBottom: styleValueTypes.px,\n    marginLeft: styleValueTypes.px,\n    // Transform props\n    rotate: styleValueTypes.degrees,\n    rotateX: styleValueTypes.degrees,\n    rotateY: styleValueTypes.degrees,\n    rotateZ: styleValueTypes.degrees,\n    scale: styleValueTypes.scale,\n    scaleX: styleValueTypes.scale,\n    scaleY: styleValueTypes.scale,\n    scaleZ: styleValueTypes.scale,\n    skew: styleValueTypes.degrees,\n    skewX: styleValueTypes.degrees,\n    skewY: styleValueTypes.degrees,\n    distance: styleValueTypes.px,\n    translateX: styleValueTypes.px,\n    translateY: styleValueTypes.px,\n    translateZ: styleValueTypes.px,\n    x: styleValueTypes.px,\n    y: styleValueTypes.px,\n    z: styleValueTypes.px,\n    perspective: styleValueTypes.px,\n    transformPerspective: styleValueTypes.px,\n    opacity: styleValueTypes.alpha,\n    originX: styleValueTypes.progressPercentage,\n    originY: styleValueTypes.progressPercentage,\n    originZ: styleValueTypes.px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: styleValueTypes.alpha,\n    strokeOpacity: styleValueTypes.alpha,\n    numOctaves: int,\n};\n\nfunction buildHTMLStyles(state, latestValues, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var _a;\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    var transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (var key in latestValues) {\n        var value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable$1(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        var valueType = numberValueTypes[key];\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            /**\n             * If layout projection is on, and we need to perform scale correction for this\n             * value type, perform it.\n             */\n            if ((projection === null || projection === void 0 ? void 0 : projection.isHydrated) &&\n                (layoutState === null || layoutState === void 0 ? void 0 : layoutState.isHydrated) &&\n                valueScaleCorrection[key]) {\n                var correctedValue = valueScaleCorrection[key].process(value, layoutState, projection);\n                /**\n                 * Scale-correctable values can define a number of other values to break\n                 * down into. For instance borderRadius needs applying to borderBottomLeftRadius etc\n                 */\n                var applyTo = valueScaleCorrection[key].applyTo;\n                if (applyTo) {\n                    var num = applyTo.length;\n                    for (var i = 0; i < num; i++) {\n                        style[applyTo[i]] = correctedValue;\n                    }\n                }\n                else {\n                    style[key] = correctedValue;\n                }\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (layoutState &&\n        projection &&\n        buildProjectionTransform &&\n        buildProjectionTransformOrigin) {\n        style.transform = buildProjectionTransform(layoutState.deltaFinal, layoutState.treeScale, hasTransform ? transform : undefined);\n        if (transformTemplate) {\n            style.transform = transformTemplate(transform, style.transform);\n        }\n        style.transformOrigin = buildProjectionTransformOrigin(layoutState);\n    }\n    else {\n        if (hasTransform) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        if (hasTransformOrigin) {\n            style.transformOrigin = buildTransformOrigin(transformOrigin);\n        }\n    }\n}\n\nvar createHtmlRenderState = function () { return ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n}); };\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (var key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n    var transformTemplate = _a.transformTemplate;\n    return React.useMemo(function () {\n        var state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, undefined, undefined, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        var vars = state.vars, style = state.style;\n        return tslib.__assign(tslib.__assign({}, vars), style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    var styleProp = props.style || {};\n    var style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    if (props.transformValues) {\n        style = props.transformValues(style);\n    }\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    var htmlProps = {};\n    var style = useStyle(props, visualState, isStatic);\n    if (Boolean(props.drag)) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout =\n            \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : \"pan-\" + (props.drag === \"x\" ? \"y\" : \"x\");\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\n/**\n * A list of all valid MotionProps.\n *\n * @internalremarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nvar validMotionProps = new Set([\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"_layoutResetTransform\",\n    \"onLayoutAnimationComplete\",\n    \"onViewportBoxUpdate\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"whileDrag\",\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanEnd\",\n    \"onPanSessionStart\",\n    \"onTap\",\n    \"onTapStart\",\n    \"onTapCancel\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"whileFocus\",\n    \"whileTap\",\n    \"whileHover\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nvar shouldForward = function (key) { return !isValidMotionProp(key); };\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\").default;\n    shouldForward = function (key) {\n        // Handle events explicitly as Emotion validates them all as true\n        if (key.startsWith(\"on\")) {\n            return !isValidMotionProp(key);\n        }\n        else {\n            return emotionIsPropValid_1(key);\n        }\n    };\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    var filteredProps = {};\n    for (var key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nfunction calcOrigin$1(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : styleValueTypes.px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);\n    var pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);\n    return pxOriginX + \" \" + pxOriginY;\n}\n\n// Convert a progress 0-1 to a pixels value based on the provided length\nvar progressToPixels = function (progress, length) {\n    return styleValueTypes.px.transform(progress * length);\n};\nvar dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nvar camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, totalLength, length, spacing, offset, useDashCase) {\n    if (spacing === void 0) { spacing = 1; }\n    if (offset === void 0) { offset = 0; }\n    if (useDashCase === void 0) { useDashCase = true; }\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    var keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = progressToPixels(-offset, totalLength);\n    // Build the dash array\n    var pathLength = progressToPixels(length, totalLength);\n    var pathSpacing = progressToPixels(spacing, totalLength);\n    attrs[keys.array] = pathLength + \" \" + pathSpacing;\n}\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, \n    // This is object creation, which we try to avoid per-frame.\n    latest = tslib.__rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\n    state.attrs = state.style;\n    state.style = {};\n    var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been measured\n    if (totalPathLength !== undefined && pathLength !== undefined) {\n        buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nvar createSvgRenderState = function () { return (tslib.__assign(tslib.__assign({}, createHtmlRenderState()), { attrs: {} })); };\n\nfunction useSVGProps(props, visualState) {\n    var visualProps = React.useMemo(function () {\n        var state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return tslib.__assign(tslib.__assign({}, state.attrs), { style: tslib.__assign({}, state.style) });\n    }, [visualState]);\n    if (props.style) {\n        var rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = tslib.__assign(tslib.__assign({}, rawStyles), visualProps.style);\n    }\n    return visualProps;\n}\n\nfunction createUseRender(forwardMotionProps) {\n    if (forwardMotionProps === void 0) { forwardMotionProps = false; }\n    var useRender = function (Component, props, ref, _a, isStatic) {\n        var latestValues = _a.latestValues;\n        var useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        var visualProps = useVisualProps(props, latestValues, isStatic);\n        var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        var elementProps = tslib.__assign(tslib.__assign(tslib.__assign({}, filteredProps), visualProps), { ref: ref });\n        return React.createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\nvar camelToDash = function (str) {\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\nfunction renderHTML(element, _a) {\n    var style = _a.style, vars = _a.vars;\n    // Directly assign style into the Element's style prop. In tests Object.assign is the\n    // fastest way to assign styles.\n    Object.assign(element.style, style);\n    // Loop over any CSS variables and assign those.\n    for (var key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\n/**\n * A set of attribute names that are always read/written as camel case.\n */\nvar camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n]);\n\nfunction renderSVG(element, renderState) {\n    renderHTML(element, renderState);\n    for (var key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nfunction scrapeMotionValuesFromProps$1(props) {\n    var style = props.style;\n    var newValues = {};\n    for (var key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props) {\n    var newValues = scrapeMotionValuesFromProps$1(props);\n    for (var key in props) {\n        if (isMotionValue(props[key])) {\n            var targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nfunction isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nvar isKeyframesTarget = function (v) {\n    return Array.isArray(v);\n};\n\nvar isCustomValue = function (v) {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nvar resolveFinalValueInKeyframes = function (v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n *\n * @internal\n */\nfunction resolveMotionValue(value) {\n    var unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nfunction makeState(_a, props, context, presenceContext) {\n    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;\n    var state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = function (instance) { return onMount(props, instance, state); };\n    }\n    return state;\n}\nvar makeUseVisualState = function (config) { return function (props, isStatic) {\n    var context = React.useContext(MotionContext);\n    var presenceContext = React.useContext(PresenceContext);\n    return isStatic\n        ? makeState(config, props, context, presenceContext)\n        : useConstant(function () { return makeState(config, props, context, presenceContext); });\n}; };\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    var values = {};\n    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    var motionValues = scrapeMotionValues(props);\n    for (var key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    var initial = props.initial, animate = props.animate;\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    var variantToSet = blockInitialAnimation || initial === false ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach(function (definition) {\n            var resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            var transitionEnd = resolved.transitionEnd; resolved.transition; var target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (var key in target)\n                values[key] = target[key];\n            for (var key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nvar svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: function (props, instance, _a) {\n            var renderState = _a.renderState, latestValues = _a.latestValues;\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            if (isPath(instance)) {\n                renderState.totalPathLength = instance.getTotalLength();\n            }\n            buildSVGAttrs(renderState, latestValues, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n            // TODO: Replace with direct assignment\n            renderSVG(instance, renderState);\n        },\n    }),\n};\nfunction isPath(element) {\n    return element.tagName === \"path\";\n}\n\nvar htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nfunction createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement) {\n    var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;\n    var baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return tslib.__assign(tslib.__assign({}, baseConfig), { preloadedFeatures: preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement: createVisualElement,\n        Component: Component });\n}\n\nvar AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options) {\n    target.addEventListener(eventName, handler, options);\n    return function () { return target.removeEventListener(eventName, handler, options); };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    React.useEffect(function () {\n        var element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture(_a) {\n    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;\n    var onFocus = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, true);\n    };\n    var onBlur = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nfunction isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    var hasTouches = !!event.touches;\n    return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nfunction getViewportPointFromEvent(event) {\n    return extractEventInfo(event, \"client\");\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function () {\n    return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function () {\n    return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function () {\n    return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nvar touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n    var lock = null;\n    return function () {\n        var openLock = function () {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    var lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        var openHorizontal_1 = globalHorizontalLock();\n        var openVertical_1 = globalVerticalLock();\n        if (openHorizontal_1 && openVertical_1) {\n            lock = function () {\n                openHorizontal_1();\n                openVertical_1();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal_1)\n                openHorizontal_1();\n            if (openVertical_1)\n                openVertical_1();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined);\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined);\n}\n\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nvar isNodeOrChild = function (parent, child) {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nfunction useUnmountEffect(callback) {\n    return React.useEffect(function () { return function () { return callback(); }; }, []);\n}\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture(_a) {\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;\n    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = React.useRef(false);\n    var cancelPointerEndListeners = React.useRef(null);\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, \"pointerup\", onPointerUp), addPointerEvent(window, \"pointercancel\", onPointerCancel));\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nvar makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\nvar gestureAnimations = {\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nfunction shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nvar easingLookup = {\n    linear: popmotion.linear,\n    easeIn: popmotion.easeIn,\n    easeInOut: popmotion.easeInOut,\n    easeOut: popmotion.easeOut,\n    circIn: popmotion.circIn,\n    circInOut: popmotion.circInOut,\n    circOut: popmotion.circOut,\n    backIn: popmotion.backIn,\n    backInOut: popmotion.backInOut,\n    backOut: popmotion.backOut,\n    anticipate: popmotion.anticipate,\n    bounceIn: popmotion.bounceIn,\n    bounceInOut: popmotion.bounceInOut,\n    bounceOut: popmotion.bounceOut,\n};\nvar easingDefinitionToFunction = function (definition) {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        heyListen.invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n        var _a = tslib.__read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];\n        return popmotion.cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        heyListen.invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\nvar isEasingArray = function (ease) {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nvar isAnimatable = function (key, value) {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nvar underDampedSpring = function () { return ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10,\n}); };\nvar criticallyDampedSpring = function (to) { return ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restDelta: 0.01,\n    restSpeed: 10,\n}); };\nvar linearTween = function () { return ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n}); };\nvar keyframes = function (values) { return ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values,\n}); };\nvar defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nvar getDefaultTransition = function (valueKey, to) {\n    var transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return tslib.__assign({ to: to }, transitionFactory(to));\n};\n\n/**\n * A map of default value types for common values\n */\nvar defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), { \n    // Color props\n    color: styleValueTypes.color, backgroundColor: styleValueTypes.color, outlineColor: styleValueTypes.color, fill: styleValueTypes.color, stroke: styleValueTypes.color, \n    // Border props\n    borderColor: styleValueTypes.color, borderTopColor: styleValueTypes.color, borderRightColor: styleValueTypes.color, borderBottomColor: styleValueTypes.color, borderLeftColor: styleValueTypes.color, filter: styleValueTypes.filter, WebkitFilter: styleValueTypes.filter });\n/**\n * Gets the default ValueType for the provided value key\n */\nvar getDefaultValueType = function (key) { return defaultValueTypes[key]; };\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    var defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== styleValueTypes.filter)\n        defaultValueType = styleValueTypes.complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined(_a) {\n    _a.when; _a.delay; _a.delayChildren; _a.staggerChildren; _a.staggerDirection; _a.repeat; _a.repeatType; _a.repeatDelay; _a.from; var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n    return !!Object.keys(transition).length;\n}\nvar legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions(_a) {\n    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n    var options = tslib.__assign({}, transition);\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key) || {};\n    return (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = tslib.__spreadArray([], tslib.__read(options.to));\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    var _a;\n    if (Array.isArray(options.to)) {\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to));\n    }\n    return tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key);\n    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n    var isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    var isOriginAnimatable = isAnimatable(key, origin);\n    heyListen.warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \\\"\" + target + \"\\\". \" + origin + \" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\n    function start() {\n        var options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete: onComplete,\n            onUpdate: function (v) { return value.set(v); },\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition))\n            : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {\n                    var _a;\n                    options.onUpdate(v);\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n                }, onComplete: function () {\n                    var _a;\n                    options.onComplete();\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n                } }));\n    }\n    function set() {\n        var _a;\n        value.set(target);\n        onComplete();\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n        return { stop: function () { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n *\n * @internal\n */\nfunction startAnimation(key, value, target, transition) {\n    if (transition === void 0) { transition = {}; }\n    return value.start(function (onComplete) {\n        var delayTimer;\n        var controls;\n        var animation = getAnimation(key, value, target, transition, onComplete);\n        var delay = getDelayFromTransition(transition, key);\n        var start = function () { return (controls = animation()); };\n        if (delay) {\n            delayTimer = setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return function () {\n            clearTimeout(delayTimer);\n            controls === null || controls === void 0 ? void 0 : controls.stop();\n        };\n    });\n}\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nvar isNumericalString = function (v) { return /^\\-?\\d*\\.?\\d+$/.test(v); };\n\nfunction addUniqueItem(arr, item) {\n    arr.indexOf(item) === -1 && arr.push(item);\n}\nfunction removeItem(arr, item) {\n    var index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nvar SubscriptionManager = /** @class */ (function () {\n    function SubscriptionManager() {\n        this.subscriptions = [];\n    }\n    SubscriptionManager.prototype.add = function (handler) {\n        var _this = this;\n        addUniqueItem(this.subscriptions, handler);\n        return function () { return removeItem(_this.subscriptions, handler); };\n    };\n    SubscriptionManager.prototype.notify = function (a, b, c) {\n        var numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (var i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                var handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    };\n    SubscriptionManager.prototype.getSize = function () {\n        return this.subscriptions.length;\n    };\n    SubscriptionManager.prototype.clear = function () {\n        this.subscriptions.length = 0;\n    };\n    return SubscriptionManager;\n}());\n\nvar isFloat = function (value) {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nvar MotionValue = /** @class */ (function () {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    function MotionValue(init) {\n        var _this = this;\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = function (v, render) {\n            if (render === void 0) { render = true; }\n            _this.prev = _this.current;\n            _this.current = v;\n            // Update timestamp\n            var _a = sync.getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\n            if (_this.lastUpdated !== timestamp) {\n                _this.timeDelta = delta;\n                _this.lastUpdated = timestamp;\n                sync__default['default'].postRender(_this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (_this.prev !== _this.current) {\n                _this.updateSubscribers.notify(_this.current);\n            }\n            // Update velocity subscribers\n            if (_this.velocityUpdateSubscribers.getSize()) {\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                _this.renderSubscribers.notify(_this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = function () { return sync__default['default'].postRender(_this.velocityCheck); };\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * @library\n     *\n     * ```jsx\n     * function MyComponent() {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <Frame x={x} />\n     * }\n     * ```\n     *\n     * @motion\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @internalremarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    MotionValue.prototype.onChange = function (subscription) {\n        return this.updateSubscribers.add(subscription);\n    };\n    MotionValue.prototype.clearListeners = function () {\n        this.updateSubscribers.clear();\n    };\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    MotionValue.prototype.onRenderRequest = function (subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    };\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    MotionValue.prototype.attach = function (passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    };\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    MotionValue.prototype.set = function (v, render) {\n        if (render === void 0) { render = true; }\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    };\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    MotionValue.prototype.get = function () {\n        return this.current;\n    };\n    /**\n     * @public\n     */\n    MotionValue.prototype.getPrevious = function () {\n        return this.prev;\n    };\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    MotionValue.prototype.getVelocity = function () {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                popmotion.velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    };\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    MotionValue.prototype.start = function (animation) {\n        var _this = this;\n        this.stop();\n        return new Promise(function (resolve) {\n            _this.hasAnimated = true;\n            _this.stopAnimation = animation(resolve);\n        }).then(function () { return _this.clearAnimation(); });\n    };\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    MotionValue.prototype.stop = function () {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    };\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    MotionValue.prototype.isAnimating = function () {\n        return !!this.stopAnimation;\n    };\n    MotionValue.prototype.clearAnimation = function () {\n        this.stopAnimation = null;\n    };\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    MotionValue.prototype.destroy = function () {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    };\n    return MotionValue;\n}());\n/**\n * @internal\n */\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\n/**\n * Tests a provided value against a ValueType\n */\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\n\n/**\n * ValueType for \"auto\"\n */\nvar auto = {\n    test: function (v) { return v === \"auto\"; },\n    parse: function (v) { return v; },\n};\n\n/**\n * A list of value types commonly used for dimensions\n */\nvar dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nvar findDimensionValueType = function (v) {\n    return dimensionValueTypes.find(testValueType(v));\n};\n\n/**\n * A list of all ValueTypes\n */\nvar valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes)), [styleValueTypes.color, styleValueTypes.complex]);\n/**\n * Tests a value against the list of ValueTypes\n */\nvar findValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved\n        ? visualElement.makeTargetAnimatable(resolved, false)\n        : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = tslib.__assign(tslib.__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels)).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" && isNumericalString(value)) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\n/**\n * @internal\n */\nfunction animateVisualElement(visualElement, definition, options) {\n    if (options === void 0) { options = {}; }\n    visualElement.notifyAnimationStart();\n    var animation;\n    if (Array.isArray(definition)) {\n        var animations = definition.map(function (variant) {\n            return animateVariant(visualElement, variant, options);\n        });\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        var resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(function () {\n        return visualElement.notifyAnimationComplete(definition);\n    });\n}\nfunction animateVariant(visualElement, variant, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var resolved = resolveVariant(visualElement, variant, options.custom);\n    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getAnimation = resolved\n        ? function () { return animateTarget(visualElement, resolved, options); }\n        : function () { return Promise.resolve(); };\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? function (forwardDelay) {\n            if (forwardDelay === void 0) { forwardDelay = 0; }\n            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : function () { return Promise.resolve(); };\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    var when = transition.when;\n    if (when) {\n        var _c = tslib.__read(when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\n    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = tslib.__rest(_e, [\"transition\", \"transitionEnd\"]);\n    if (transitionOverride)\n        transition = transitionOverride;\n    var animations = [];\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n    for (var key in target) {\n        var value = visualElement.getValue(key);\n        var valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        var animation = startAnimation(key, value, valueTarget, tslib.__assign({ delay: delay }, transition));\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(function () {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n    if (delayChildren === void 0) { delayChildren = 0; }\n    if (staggerChildren === void 0) { staggerChildren = 0; }\n    if (staggerDirection === void 0) { staggerDirection = 1; }\n    var animations = [];\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1\n        ? function (i) {\n            if (i === void 0) { i = 0; }\n            return i * staggerChildren;\n        }\n        : function (i) {\n            if (i === void 0) { i = 0; }\n            return maxStaggerDuration - i * staggerChildren;\n        };\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach(function (child, i) {\n        animations.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue(function (value) { return value.stop(); });\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation(_a, key) {\n    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nvar variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Focus,\n    AnimationType.Exit,\n];\nvar reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder)).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = tslib.__assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev)) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, tslib.__spreadArray([], tslib.__read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: tslib.__assign({ type: type }, options),\n                }); }))));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = tslib.__assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        return animateChanges(options, type);\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction variantsHaveChanged(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[AnimationType.Animate] = createTypeState(true),\n        _a[AnimationType.Hover] = createTypeState(),\n        _a[AnimationType.Tap] = createTypeState(),\n        _a[AnimationType.Drag] = createTypeState(),\n        _a[AnimationType.Focus] = createTypeState(),\n        _a[AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            React.useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = tslib.__read(usePresence(), 2), isPresent = _a[0], onExitComplete = _a[1];\n        var presenceContext = React.useContext(PresenceContext);\n        React.useEffect(function () {\n            var _a, _b;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));\n        }, [isPresent]);\n    }),\n};\n\n/**\n * @internal\n */\nvar PanSession = /** @class */ (function () {\n    function PanSession(event, handlers, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = function () {\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\n                return;\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n            var isPanStarted = _this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            var isDistancePastThreshold = popmotion.distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            var point = info.point;\n            var timestamp = sync.getFrameData().timestamp;\n            _this.history.push(tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp }));\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\n            if (!isPanStarted) {\n                onStart && onStart(_this.lastMoveEvent, info);\n                _this.startEvent = _this.lastMoveEvent;\n            }\n            onMove && onMove(_this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = function (event, info) {\n            _this.lastMoveEvent = event;\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                _this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync__default['default'].update(_this.updatePoint, true);\n        };\n        this.handlePointerUp = function (event, info) {\n            _this.end();\n            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n            if (_this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        var info = extractEventInfo(event);\n        var initialInfo = transformPoint(info, this.transformPagePoint);\n        var point = initialInfo.point;\n        var timestamp = sync.getFrameData().timestamp;\n        this.history = [tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp })];\n        var onSessionStart = handlers.onSessionStart;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = popmotion.pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    PanSession.prototype.updateHandlers = function (handlers) {\n        this.handlers = handlers;\n    };\n    PanSession.prototype.end = function () {\n        this.removeListeners && this.removeListeners();\n        sync.cancelSync.update(this.updatePoint);\n    };\n    return PanSession;\n}());\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(_a, history) {\n    var point = _a.point;\n    return {\n        point: point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    var i = history.length - 1;\n    var timestampedPoint = null;\n    var lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    var currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nfunction noop(any) {\n    return any;\n}\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToAxisBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertAxisBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return {\n        top: y.min,\n        bottom: y.max,\n        left: x.min,\n        right: x.max,\n    };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoundingBox(_a, transformPoint) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    if (transformPoint === void 0) { transformPoint = noop; }\n    var topLeft = transformPoint({ x: left, y: top });\n    var bottomRight = transformPoint({ x: right, y: bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n/**\n * Create an empty axis box of zero size\n */\nfunction axisBox() {\n    return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };\n}\nfunction copyAxisBox(box) {\n    return {\n        x: tslib.__assign({}, box.x),\n        y: tslib.__assign({}, box.y),\n    };\n}\n/**\n * Create an empty box delta\n */\nvar zeroDelta = {\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n};\nfunction delta() {\n    return {\n        x: tslib.__assign({}, zeroDelta),\n        y: tslib.__assign({}, zeroDelta),\n    };\n}\n\n// Call a handler once for each axis\nfunction eachAxis(handler) {\n    return [handler(\"x\"), handler(\"y\")];\n}\n\nvar clampProgress = function (v) { return popmotion.clamp(0, 1, v); };\n/**\n * Returns true if the provided value is within maxDistance of the provided target\n */\nfunction isNear(value, target, maxDistance) {\n    if (target === void 0) { target = 0; }\n    if (maxDistance === void 0) { maxDistance = 0.01; }\n    return popmotion.distance(value, target) < maxDistance;\n}\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = popmotion.progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = popmotion.progress(source.min, source.max - targetLength, target.min);\n    }\n    return clampProgress(origin);\n}\n/**\n * Update the AxisDelta with a transform that projects source into target.\n *\n * The transform `origin` is optional. If not provided, it'll be automatically\n * calculated based on the relative positions of the two bounding boxes.\n */\nfunction updateAxisDelta(delta, source, target, origin) {\n    if (origin === void 0) { origin = 0.5; }\n    delta.origin = origin;\n    delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001))\n        delta.scale = 1;\n    delta.translate =\n        popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate))\n        delta.translate = 0;\n}\n/**\n * Update the BoxDelta with a transform that projects the source into the target.\n *\n * The transform `origin` is optional. If not provided, it'll be automatically\n * calculated based on the relative positions of the two bounding boxes.\n */\nfunction updateBoxDelta(delta, source, target, origin) {\n    updateAxisDelta(delta.x, source.x, target.x, defaultOrigin(origin.originX));\n    updateAxisDelta(delta.y, source.y, target.y, defaultOrigin(origin.originY));\n}\n/**\n * Currently this only accepts numerical origins, measured as 0-1, but could\n * accept pixel values by comparing to the target axis.\n */\nfunction defaultOrigin(origin) {\n    return typeof origin === \"number\" ? origin : 0.5;\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(projection, parentProjection) {\n    calcRelativeAxis(projection.target.x, projection.relativeTarget.x, parentProjection.target.x);\n    calcRelativeAxis(projection.target.y, projection.relativeTarget.y, parentProjection.target.y);\n}\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculates a min projection point based on a pointer, pointer progress\n * within the drag target, and constraints.\n *\n * For instance if an element was 100px width, we were dragging from 0.25\n * along this axis, the pointer is at 200px, and there were no constraints,\n * we would calculate a min projection point of 175px.\n */\nfunction calcConstrainedMinPoint(point, length, progress, constraints, elastic) {\n    // Calculate a min point for this axis and apply it to the current pointer\n    var min = point - length * progress;\n    return constraints ? applyConstraints(min, constraints, elastic) : min;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = tslib.__read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return {\n        min: layoutAxis.min + min,\n        max: layoutAxis.min + max,\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate the an axis position based on two axes and a progress value.\n */\nfunction calcPositionFromProgress(axis, constraints, progress) {\n    var axisLength = axis.max - axis.min;\n    var min = popmotion.mix(constraints.min, constraints.max - axisLength, progress);\n    return { min: min, max: min + axisLength };\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\n/**\n * Measure and return the element bounding box.\n *\n * We convert the box into an AxisBox2D to make it easier to work with each axis\n * individually and programmatically.\n *\n * This function optionally accepts a transformPagePoint function which allows us to compensate\n * for, for instance, measuring the element within a scaled plane like a Framer devivce preview component.\n */\nfunction getBoundingBox(element, transformPagePoint) {\n    var box = element.getBoundingClientRect();\n    return convertBoundingBoxToAxisBox(transformBoundingBox(box, transformPagePoint));\n}\n\nvar compareByDepth = function (a, b) {\n    return a.depth - b.depth;\n};\n\nfunction isProjecting(visualElement) {\n    var isEnabled = visualElement.projection.isEnabled;\n    return isEnabled || visualElement.shouldResetTransform();\n}\nfunction collectProjectingAncestors(visualElement, ancestors) {\n    if (ancestors === void 0) { ancestors = []; }\n    var parent = visualElement.parent;\n    if (parent)\n        collectProjectingAncestors(parent, ancestors);\n    if (isProjecting(visualElement))\n        ancestors.push(visualElement);\n    return ancestors;\n}\nfunction collectProjectingChildren(visualElement) {\n    var children = [];\n    var addChild = function (child) {\n        if (isProjecting(child))\n            children.push(child);\n        child.children.forEach(addChild);\n    };\n    visualElement.children.forEach(addChild);\n    return children.sort(compareByDepth);\n}\n/**\n * Update the layoutState by measuring the DOM layout. This\n * should be called after resetting any layout-affecting transforms.\n */\nfunction updateLayoutMeasurement(visualElement) {\n    if (visualElement.shouldResetTransform())\n        return;\n    var layoutState = visualElement.getLayoutState();\n    visualElement.notifyBeforeLayoutMeasure(layoutState.layout);\n    layoutState.isHydrated = true;\n    layoutState.layout = visualElement.measureViewportBox();\n    layoutState.layoutCorrected = copyAxisBox(layoutState.layout);\n    visualElement.notifyLayoutMeasure(layoutState.layout, visualElement.prevViewportBox || layoutState.layout);\n    sync__default['default'].update(function () { return visualElement.rebaseProjectionTarget(); });\n}\n/**\n * Record the viewport box as it was before an expected mutation/re-render\n */\nfunction snapshotViewportBox(visualElement) {\n    if (visualElement.shouldResetTransform())\n        return;\n    visualElement.prevViewportBox = visualElement.measureViewportBox(false);\n    /**\n     * Update targetBox to match the prevViewportBox. This is just to ensure\n     * that targetBox is affected by scroll in the same way as the measured box\n     */\n    visualElement.rebaseProjectionTarget(false, visualElement.prevViewportBox);\n}\n\nfunction tweenAxis(target, prev, next, p) {\n    target.min = popmotion.mix(prev.min, next.min, p);\n    target.max = popmotion.mix(prev.max, next.max, p);\n}\nfunction calcRelativeOffsetAxis(parent, child) {\n    return {\n        min: child.min - parent.min,\n        max: child.max - parent.min,\n    };\n}\nfunction calcRelativeOffset(parent, child) {\n    return {\n        x: calcRelativeOffsetAxis(parent.x, child.x),\n        y: calcRelativeOffsetAxis(parent.y, child.y),\n    };\n}\nfunction checkIfParentHasChanged(prev, next) {\n    var prevId = prev.getLayoutId();\n    var nextId = next.getLayoutId();\n    return prevId !== nextId || (nextId === undefined && prev !== next);\n}\n\nfunction isDraggable(visualElement) {\n    var _a = visualElement.getProps(), drag = _a.drag, _dragX = _a._dragX;\n    return drag && !_dragX;\n}\n\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction resetAxis(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction resetBox(box, originBox) {\n    resetAxis(box.x, originBox.x);\n    resetAxis(box.y, originBox.y);\n}\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    var distanceFromOrigin = point - originPoint;\n    var scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, _a) {\n    var x = _a.x, y = _a.y;\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction applyAxisTransforms(final, axis, transforms, _a) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    // Copy the current axis to the final axis before mutation\n    final.min = axis.min;\n    final.max = axis.max;\n    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    var originPoint = popmotion.mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(final, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction applyBoxTransforms(finalBox, box, transforms) {\n    applyAxisTransforms(finalBox.x, box.x, transforms, xKeys);\n    applyAxisTransforms(finalBox.y, box.y, transforms, yKeys);\n}\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (origin === void 0) { origin = 0.5; }\n    var originPoint = popmotion.mix(axis.min, axis.max, origin) - translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, _a) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale);\n}\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms) {\n    removeAxisTransforms(box.x, transforms, xKeys);\n    removeAxisTransforms(box.y, transforms, yKeys);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath) {\n    var treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    var node;\n    var delta;\n    for (var i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.getLayoutState().delta;\n        // Incoporate each ancestor's scale into a culmulative treeScale for this component\n        treeScale.x *= delta.x.scale;\n        treeScale.y *= delta.y.scale;\n        // Apply each ancestor's calculated delta into this component's recorded layout box\n        applyBoxDelta(box, delta);\n        // If this is a draggable ancestor, also incorporate the node's transform to the layout box\n        if (isDraggable(node)) {\n            applyBoxTransforms(box, box, node.getLatestValues());\n        }\n    }\n}\n\n/**\n * Returns a boolean stating whether or not we converted the projection\n * to relative projection.\n */\nfunction convertToRelativeProjection(visualElement, isLayoutDrag) {\n    if (isLayoutDrag === void 0) { isLayoutDrag = true; }\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent)\n        return false;\n    var offset;\n    if (isLayoutDrag) {\n        offset = calcRelativeOffset(projectionParent.projection.target, visualElement.projection.target);\n        removeBoxTransforms(offset, projectionParent.getLatestValues());\n    }\n    else {\n        offset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    }\n    eachAxis(function (axis) {\n        return visualElement.setProjectionTargetAxis(axis, offset[axis].min, offset[axis].max, true);\n    });\n    return true;\n}\n\nvar unresolvedJobs = new Set();\nfunction pushJob(stack, job, pointer) {\n    if (!stack[pointer])\n        stack[pointer] = [];\n    stack[pointer].push(job);\n}\nfunction batchLayout(callback) {\n    unresolvedJobs.add(callback);\n    return function () { return unresolvedJobs.delete(callback); };\n}\nfunction flushLayout() {\n    if (!unresolvedJobs.size)\n        return;\n    var pointer = 0;\n    var reads = [[]];\n    var writes = [];\n    var setRead = function (job) { return pushJob(reads, job, pointer); };\n    var setWrite = function (job) {\n        pushJob(writes, job, pointer);\n        pointer++;\n    };\n    /**\n     * Resolve jobs into their array stacks\n     */\n    unresolvedJobs.forEach(function (callback) {\n        callback(setRead, setWrite);\n        pointer = 0;\n    });\n    unresolvedJobs.clear();\n    /**\n     * Execute jobs\n     */\n    var numStacks = writes.length;\n    for (var i = 0; i <= numStacks; i++) {\n        reads[i] && reads[i].forEach(executeJob);\n        writes[i] && writes[i].forEach(executeJob);\n    }\n}\nvar executeJob = function (job) { return job(); };\n\nvar elementDragControls = new WeakMap();\n/**\n *\n */\nvar lastPointerEvent;\nvar VisualElementDragControls = /** @class */ (function () {\n    function VisualElementDragControls(_a) {\n        var visualElement = _a.visualElement;\n        /**\n         * Track whether we're currently dragging.\n         *\n         * @internal\n         */\n        this.isDragging = false;\n        /**\n         * The current direction of drag, or `null` if both.\n         *\n         * @internal\n         */\n        this.currentDirection = null;\n        /**\n         * The permitted boundaries of travel, in pixels.\n         *\n         * @internal\n         */\n        this.constraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         *\n         * @internal\n         */\n        this.elastic = axisBox();\n        /**\n         * A reference to the host component's latest props.\n         *\n         * @internal\n         */\n        this.props = {};\n        /**\n         * @internal\n         */\n        this.hasMutatedConstraints = false;\n        /**\n         * Track the initial position of the cursor relative to the dragging element\n         * when dragging starts as a value of 0-1 on each axis. We then use this to calculate\n         * an ideal bounding box for the VisualElement renderer to project into every frame.\n         *\n         * @internal\n         */\n        this.cursorProgress = {\n            x: 0.5,\n            y: 0.5,\n        };\n        // When updating _dragX, or _dragY instead of the VisualElement,\n        // persist their values between drag gestures.\n        this.originPoint = {};\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        /**\n         * @internal\n         */\n        this.panSession = null;\n        this.visualElement = visualElement;\n        this.visualElement.enableLayoutProjection();\n        elementDragControls.set(visualElement, this);\n    }\n    /**\n     * Instantiate a PanSession for the drag gesture\n     *\n     * @public\n     */\n    VisualElementDragControls.prototype.start = function (originEvent, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c, cursorProgress = _b.cursorProgress;\n        var onSessionStart = function (event) {\n            var _a;\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            _this.stopMotion();\n            /**\n             * Save the initial point. We'll use this to calculate the pointer's position rather\n             * than the one we receive when the gesture actually starts. By then, the pointer will\n             * have already moved, and the perception will be of the pointer \"slipping\" across the element\n             */\n            var initialPoint = getViewportPointFromEvent(event).point;\n            (_a = _this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(_this);\n            _this.cancelLayout = batchLayout(function (read, write) {\n                var ancestors = collectProjectingAncestors(_this.visualElement);\n                var children = collectProjectingChildren(_this.visualElement);\n                var tree = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(ancestors)), tslib.__read(children));\n                var hasManuallySetCursorOrigin = false;\n                /**\n                 * Apply a simple lock to the projection target. This ensures no animations\n                 * can run on the projection box while this lock is active.\n                 */\n                _this.isLayoutDrag() && _this.visualElement.lockProjectionTarget();\n                write(function () {\n                    tree.forEach(function (element) { return element.resetTransform(); });\n                });\n                read(function () {\n                    updateLayoutMeasurement(_this.visualElement);\n                    children.forEach(updateLayoutMeasurement);\n                });\n                write(function () {\n                    tree.forEach(function (element) { return element.restoreTransform(); });\n                    if (snapToCursor) {\n                        hasManuallySetCursorOrigin = _this.snapToCursor(initialPoint);\n                    }\n                });\n                read(function () {\n                    var isRelativeDrag = Boolean(_this.getAxisMotionValue(\"x\") && !_this.isExternalDrag());\n                    if (!isRelativeDrag) {\n                        _this.visualElement.rebaseProjectionTarget(true, _this.visualElement.measureViewportBox(false));\n                    }\n                    _this.visualElement.scheduleUpdateLayoutProjection();\n                    /**\n                     * When dragging starts, we want to find where the cursor is relative to the bounding box\n                     * of the element. Every frame, we calculate a new bounding box using this relative position\n                     * and let the visualElement renderer figure out how to reproject the element into this bounding\n                     * box.\n                     *\n                     * By doing it this way, rather than applying an x/y transform directly to the element,\n                     * we can ensure the component always visually sticks to the cursor as we'd expect, even\n                     * if the DOM element itself changes layout as a result of React updates the user might\n                     * make based on the drag position.\n                     */\n                    var projection = _this.visualElement.projection;\n                    eachAxis(function (axis) {\n                        if (!hasManuallySetCursorOrigin) {\n                            var _a = projection.target[axis], min = _a.min, max = _a.max;\n                            _this.cursorProgress[axis] = cursorProgress\n                                ? cursorProgress[axis]\n                                : popmotion.progress(min, max, initialPoint[axis]);\n                        }\n                        /**\n                         * If we have external drag MotionValues, record their origin point. On pointermove\n                         * we'll apply the pan gesture offset directly to this value.\n                         */\n                        var axisValue = _this.getAxisMotionValue(axis);\n                        if (axisValue) {\n                            _this.originPoint[axis] = axisValue.get();\n                        }\n                    });\n                });\n                write(function () {\n                    sync.flushSync.update();\n                    sync.flushSync.preRender();\n                    sync.flushSync.render();\n                    sync.flushSync.postRender();\n                });\n                read(function () { return _this.resolveDragConstraints(); });\n            });\n        };\n        var onStart = function (event, info) {\n            var _a, _b, _c;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            var _d = _this.props, drag = _d.drag, dragPropagation = _d.dragPropagation;\n            if (drag && !dragPropagation) {\n                if (_this.openGlobalLock)\n                    _this.openGlobalLock();\n                _this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!_this.openGlobalLock)\n                    return;\n            }\n            flushLayout();\n            // Set current drag status\n            _this.isDragging = true;\n            _this.currentDirection = null;\n            // Fire onDragStart event\n            (_b = (_a = _this.props).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n            (_c = _this.visualElement.animationState) === null || _c === void 0 ? void 0 : _c.setActive(AnimationType.Drag, true);\n        };\n        var onMove = function (event, info) {\n            var _a, _b, _c, _d;\n            var _e = _this.props, dragPropagation = _e.dragPropagation, dragDirectionLock = _e.dragDirectionLock;\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !_this.openGlobalLock)\n                return;\n            var offset = info.offset;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && _this.currentDirection === null) {\n                _this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (_this.currentDirection !== null) {\n                    (_b = (_a = _this.props).onDirectionLock) === null || _b === void 0 ? void 0 : _b.call(_a, _this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            _this.updateAxis(\"x\", info.point, offset);\n            _this.updateAxis(\"y\", info.point, offset);\n            // Fire onDrag event\n            (_d = (_c = _this.props).onDrag) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n            // Update the last pointer event\n            lastPointerEvent = event;\n        };\n        var onSessionEnd = function (event, info) {\n            return _this.stop(event, info);\n        };\n        var transformPagePoint = this.props.transformPagePoint;\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart: onSessionStart,\n            onStart: onStart,\n            onMove: onMove,\n            onSessionEnd: onSessionEnd,\n        }, { transformPagePoint: transformPagePoint });\n    };\n    VisualElementDragControls.prototype.resolveDragConstraints = function () {\n        var _this = this;\n        var _a = this.props, dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;\n        var layout = this.visualElement.getLayoutState().layoutCorrected;\n        if (dragConstraints) {\n            this.constraints = isRefObject(dragConstraints)\n                ? this.resolveRefConstraints(layout, dragConstraints)\n                : calcRelativeConstraints(layout, dragConstraints);\n        }\n        else {\n            this.constraints = false;\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (this.constraints && !this.hasMutatedConstraints) {\n            eachAxis(function (axis) {\n                if (_this.getAxisMotionValue(axis)) {\n                    _this.constraints[axis] = rebaseAxisConstraints(layout[axis], _this.constraints[axis]);\n                }\n            });\n        }\n    };\n    VisualElementDragControls.prototype.resolveRefConstraints = function (layoutBox, constraints) {\n        var _a = this.props, onMeasureDragConstraints = _a.onMeasureDragConstraints, transformPagePoint = _a.transformPagePoint;\n        var constraintsElement = constraints.current;\n        heyListen.invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        this.constraintsBox = getBoundingBox(constraintsElement, transformPagePoint);\n        var measuredConstraints = calcViewportConstraints(layoutBox, this.constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            var userConstraints = onMeasureDragConstraints(convertAxisBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToAxisBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    };\n    VisualElementDragControls.prototype.cancelDrag = function () {\n        var _a, _b;\n        this.visualElement.unlockProjectionTarget();\n        (_a = this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(this);\n        this.isDragging = false;\n        this.panSession && this.panSession.end();\n        this.panSession = null;\n        if (!this.props.dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    };\n    VisualElementDragControls.prototype.stop = function (event, info) {\n        var _a, _b, _c;\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = null;\n        var isDragging = this.isDragging;\n        this.cancelDrag();\n        if (!isDragging)\n            return;\n        var velocity = info.velocity;\n        this.animateDragEnd(velocity);\n        (_c = (_b = this.props).onDragEnd) === null || _c === void 0 ? void 0 : _c.call(_b, event, info);\n    };\n    VisualElementDragControls.prototype.snapToCursor = function (point) {\n        var _this = this;\n        return eachAxis(function (axis) {\n            var drag = _this.props.drag;\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, _this.currentDirection))\n                return;\n            var axisValue = _this.getAxisMotionValue(axis);\n            if (axisValue) {\n                var box = _this.visualElement.getLayoutState().layout;\n                var length_1 = box[axis].max - box[axis].min;\n                var center = box[axis].min + length_1 / 2;\n                var offset = point[axis] - center;\n                _this.originPoint[axis] = point[axis];\n                axisValue.set(offset);\n            }\n            else {\n                _this.cursorProgress[axis] = 0.5;\n                return true;\n            }\n        }).includes(true);\n    };\n    /**\n     * Update the specified axis with the latest pointer information.\n     */\n    VisualElementDragControls.prototype.updateAxis = function (axis, point, offset) {\n        var drag = this.props.drag;\n        // If we're not dragging this axis, do an early return.\n        if (!shouldDrag(axis, drag, this.currentDirection))\n            return;\n        return this.getAxisMotionValue(axis)\n            ? this.updateAxisMotionValue(axis, offset)\n            : this.updateVisualElementAxis(axis, point);\n    };\n    VisualElementDragControls.prototype.updateAxisMotionValue = function (axis, offset) {\n        var axisValue = this.getAxisMotionValue(axis);\n        if (!offset || !axisValue)\n            return;\n        var nextValue = this.originPoint[axis] + offset[axis];\n        var update = this.constraints\n            ? applyConstraints(nextValue, this.constraints[axis], this.elastic[axis])\n            : nextValue;\n        axisValue.set(update);\n    };\n    VisualElementDragControls.prototype.updateVisualElementAxis = function (axis, point) {\n        var _a;\n        // Get the actual layout bounding box of the element\n        var axisLayout = this.visualElement.getLayoutState().layout[axis];\n        // Calculate its current length. In the future we might want to lerp this to animate\n        // between lengths if the layout changes as we change the DOM\n        var axisLength = axisLayout.max - axisLayout.min;\n        // Get the initial progress that the pointer sat on this axis on gesture start.\n        var axisProgress = this.cursorProgress[axis];\n        // Calculate a new min point based on the latest pointer position, constraints and elastic\n        var min = calcConstrainedMinPoint(point[axis], axisLength, axisProgress, (_a = this.constraints) === null || _a === void 0 ? void 0 : _a[axis], this.elastic[axis]);\n        // Update the axis viewport target with this new min and the length\n        this.visualElement.setProjectionTargetAxis(axis, min, min + axisLength);\n    };\n    VisualElementDragControls.prototype.setProps = function (_a) {\n        var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? defaultElastic : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = tslib.__rest(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\n        this.props = tslib.__assign({ drag: drag,\n            dragDirectionLock: dragDirectionLock,\n            dragPropagation: dragPropagation,\n            dragConstraints: dragConstraints,\n            dragElastic: dragElastic,\n            dragMomentum: dragMomentum }, remainingProps);\n    };\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - If the component will perform layout animations, we output the gesture to the component's\n     *      visual bounding box\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {\n        var _a = this.props, layout = _a.layout, layoutId = _a.layoutId;\n        var dragKey = \"_drag\" + axis.toUpperCase();\n        if (this.props[dragKey]) {\n            return this.props[dragKey];\n        }\n        else if (!layout && layoutId === undefined) {\n            return this.visualElement.getValue(axis, 0);\n        }\n    };\n    VisualElementDragControls.prototype.isLayoutDrag = function () {\n        return !this.getAxisMotionValue(\"x\");\n    };\n    VisualElementDragControls.prototype.isExternalDrag = function () {\n        var _a = this.props, _dragX = _a._dragX, _dragY = _a._dragY;\n        return _dragX || _dragY;\n    };\n    VisualElementDragControls.prototype.animateDragEnd = function (velocity) {\n        var _this = this;\n        var _a = this.props, drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition;\n        /**\n         * Everything beyond the drag gesture should be performed with\n         * relative projection so children stay in sync with their parent element.\n         */\n        var isRelative = convertToRelativeProjection(this.visualElement, this.isLayoutDrag() && !this.isExternalDrag());\n        /**\n         * If we had previously resolved constraints relative to the viewport,\n         * we need to also convert those to a relative coordinate space for the animation\n         */\n        var constraints = this.constraints || {};\n        if (isRelative &&\n            Object.keys(constraints).length &&\n            this.isLayoutDrag()) {\n            var projectionParent = this.visualElement.getProjectionParent();\n            if (projectionParent) {\n                var relativeConstraints_1 = calcRelativeOffset(projectionParent.projection.targetFinal, constraints);\n                eachAxis(function (axis) {\n                    var _a = relativeConstraints_1[axis], min = _a.min, max = _a.max;\n                    constraints[axis] = {\n                        min: isNaN(min) ? undefined : min,\n                        max: isNaN(max) ? undefined : max,\n                    };\n                });\n            }\n        }\n        var momentumAnimations = eachAxis(function (axis) {\n            var _a;\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\n                return;\n            }\n            var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            var bounceStiffness = dragElastic ? 200 : 1000000;\n            var bounceDamping = dragElastic ? 40 : 10000000;\n            var inertia = tslib.__assign(tslib.__assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,\n                bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return _this.getAxisMotionValue(axis)\n                ? _this.startAxisValueAnimation(axis, inertia)\n                : _this.visualElement.startLayoutAnimation(axis, inertia, isRelative);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(function () {\n            var _a, _b;\n            (_b = (_a = _this.props).onDragTransitionEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n    };\n    VisualElementDragControls.prototype.stopMotion = function () {\n        var _this = this;\n        eachAxis(function (axis) {\n            var axisValue = _this.getAxisMotionValue(axis);\n            axisValue\n                ? axisValue.stop()\n                : _this.visualElement.stopLayoutAnimation();\n        });\n    };\n    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {\n        var axisValue = this.getAxisMotionValue(axis);\n        if (!axisValue)\n            return;\n        var currentValue = axisValue.get();\n        axisValue.set(currentValue);\n        axisValue.set(currentValue); // Set twice to hard-reset velocity\n        return startAnimation(axis, axisValue, 0, transition);\n    };\n    VisualElementDragControls.prototype.scalePoint = function () {\n        var _this = this;\n        var _a = this.props, drag = _a.drag, dragConstraints = _a.dragConstraints;\n        if (!isRefObject(dragConstraints) || !this.constraintsBox)\n            return;\n        // Stop any current animations as there can be some visual glitching if we resize mid animation\n        this.stopMotion();\n        // Record the relative progress of the targetBox relative to the constraintsBox\n        var boxProgress = { x: 0, y: 0 };\n        eachAxis(function (axis) {\n            boxProgress[axis] = calcOrigin(_this.visualElement.projection.target[axis], _this.constraintsBox[axis]);\n        });\n        /**\n         * For each axis, calculate the current progress of the layout axis within the constraints.\n         * Then, using the latest layout and constraints measurements, reposition the new layout axis\n         * proportionally within the constraints.\n         */\n        this.updateConstraints(function () {\n            eachAxis(function (axis) {\n                if (!shouldDrag(axis, drag, null))\n                    return;\n                // Calculate the position of the targetBox relative to the constraintsBox using the\n                // previously calculated progress\n                var _a = calcPositionFromProgress(_this.visualElement.projection.target[axis], _this.constraintsBox[axis], boxProgress[axis]), min = _a.min, max = _a.max;\n                _this.visualElement.setProjectionTargetAxis(axis, min, max);\n            });\n        });\n        /**\n         * If any other draggable components are queuing the same tasks synchronously\n         * this will wait until they've all been scheduled before flushing.\n         */\n        setTimeout(flushLayout, 1);\n    };\n    VisualElementDragControls.prototype.updateConstraints = function (onReady) {\n        var _this = this;\n        this.cancelLayout = batchLayout(function (read, write) {\n            var ancestors = collectProjectingAncestors(_this.visualElement);\n            write(function () {\n                return ancestors.forEach(function (element) { return element.resetTransform(); });\n            });\n            read(function () { return updateLayoutMeasurement(_this.visualElement); });\n            write(function () {\n                return ancestors.forEach(function (element) { return element.restoreTransform(); });\n            });\n            read(function () {\n                _this.resolveDragConstraints();\n            });\n            if (onReady)\n                write(onReady);\n        });\n    };\n    VisualElementDragControls.prototype.mount = function (visualElement) {\n        var _this = this;\n        var element = visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\n            var _a = _this.props, drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\n            drag && dragListener && _this.start(event);\n        });\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\n            _this.scalePoint();\n        });\n        /**\n         * Ensure drag constraints are resolved correctly relative to the dragging element\n         * whenever its layout changes.\n         */\n        var stopLayoutUpdateListener = visualElement.onLayoutUpdate(function () {\n            if (_this.isDragging) {\n                _this.resolveDragConstraints();\n            }\n        });\n        /**\n         * If the previous component with this same layoutId was dragging at the time\n         * it was unmounted, we want to continue the same gesture on this component.\n         */\n        var prevDragCursor = visualElement.prevDragCursor;\n        if (prevDragCursor) {\n            this.start(lastPointerEvent, { cursorProgress: prevDragCursor });\n        }\n        /**\n         * Return a function that will teardown the drag gesture\n         */\n        return function () {\n            stopPointerListener === null || stopPointerListener === void 0 ? void 0 : stopPointerListener();\n            stopResizeListener === null || stopResizeListener === void 0 ? void 0 : stopResizeListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n            _this.cancelDrag();\n        };\n    };\n    return VisualElementDragControls;\n}());\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold) {\n    if (lockThreshold === void 0) { lockThreshold = 10; }\n    var direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    var groupDragControls = props.dragControls, visualElement = props.visualElement;\n    var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;\n    var dragControls = useConstant(function () {\n        return new VisualElementDragControls({\n            visualElement: visualElement,\n        });\n    });\n    dragControls.setProps(tslib.__assign(tslib.__assign({}, props), { transformPagePoint: transformPagePoint }));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    React.useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\n    // Mount the drag controls with the visualElement\n    React.useEffect(function () { return dragControls.mount(visualElement); }, []);\n}\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @internalremarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture(_a) {\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    var panSession = React.useRef(null);\n    var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;\n    var handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: function (event, info) {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    React.useEffect(function () {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint: transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\n}\n\nvar drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\n/**\n * @public\n */\nvar Presence;\n(function (Presence) {\n    Presence[Presence[\"Entering\"] = 0] = \"Entering\";\n    Presence[Presence[\"Present\"] = 1] = \"Present\";\n    Presence[Presence[\"Exiting\"] = 2] = \"Exiting\";\n})(Presence || (Presence = {}));\n/**\n * @public\n */\nexports.VisibilityAction = void 0;\n(function (VisibilityAction) {\n    VisibilityAction[VisibilityAction[\"Hide\"] = 0] = \"Hide\";\n    VisibilityAction[VisibilityAction[\"Show\"] = 1] = \"Show\";\n})(exports.VisibilityAction || (exports.VisibilityAction = {}));\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    var match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    var _a = tslib.__read(match, 3), token = _a[1], fallback = _a[2];\n    return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n    if (depth === void 0) { depth = 1; }\n    heyListen.invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\n    var _a = tslib.__read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = tslib.__rest(_a, []);\n    var element = visualElement.getInstance();\n    if (!(element instanceof HTMLElement))\n        return { target: target, transitionEnd: transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = tslib.__assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue(function (value) {\n        var current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        var resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (var key in target) {\n        var current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        var resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target: target, transitionEnd: transitionEnd };\n}\n\nfunction pixelsToPercent(pixels, axis) {\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nfunction correctBorderRadius(latest, _layoutState, _a) {\n    var target = _a.target;\n    /**\n     * If latest is a string, if it's a percentage we can return immediately as it's\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n     */\n    if (typeof latest === \"string\") {\n        if (styleValueTypes.px.test(latest)) {\n            latest = parseFloat(latest);\n        }\n        else {\n            return latest;\n        }\n    }\n    /**\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n     * pixel value as a percentage of each axis\n     */\n    var x = pixelsToPercent(latest, target.x);\n    var y = pixelsToPercent(latest, target.y);\n    return x + \"% \" + y + \"%\";\n}\nvar varToken = \"_$css\";\nfunction correctBoxShadow(latest, _a) {\n    var delta = _a.delta, treeScale = _a.treeScale;\n    var original = latest;\n    /**\n     * We need to first strip and store CSS variables from the string.\n     */\n    var containsCSSVariables = latest.includes(\"var(\");\n    var cssVariables = [];\n    if (containsCSSVariables) {\n        latest = latest.replace(cssVariableRegex, function (match) {\n            cssVariables.push(match);\n            return varToken;\n        });\n    }\n    var shadow = styleValueTypes.complex.parse(latest);\n    // TODO: Doesn't support multiple shadows\n    if (shadow.length > 5)\n        return original;\n    var template = styleValueTypes.complex.createTransformer(latest);\n    var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n    // Calculate the overall context scale\n    var xScale = delta.x.scale * treeScale.x;\n    var yScale = delta.y.scale * treeScale.y;\n    shadow[0 + offset] /= xScale;\n    shadow[1 + offset] /= yScale;\n    /**\n     * Ideally we'd correct x and y scales individually, but because blur and\n     * spread apply to both we have to take a scale average and apply that instead.\n     * We could potentially improve the outcome of this by incorporating the ratio between\n     * the two scales.\n     */\n    var averageScale = popmotion.mix(xScale, yScale, 0.5);\n    // Blur\n    if (typeof shadow[2 + offset] === \"number\")\n        shadow[2 + offset] /= averageScale;\n    // Spread\n    if (typeof shadow[3 + offset] === \"number\")\n        shadow[3 + offset] /= averageScale;\n    var output = template(shadow);\n    if (containsCSSVariables) {\n        var i_1 = 0;\n        output = output.replace(varToken, function () {\n            var cssVariable = cssVariables[i_1];\n            i_1++;\n            return cssVariable;\n        });\n    }\n    return output;\n}\nvar borderCorrectionDefinition = {\n    process: correctBorderRadius,\n};\nvar defaultScaleCorrectors = {\n    borderRadius: tslib.__assign(tslib.__assign({}, borderCorrectionDefinition), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: borderCorrectionDefinition,\n    borderTopRightRadius: borderCorrectionDefinition,\n    borderBottomLeftRadius: borderCorrectionDefinition,\n    borderBottomRightRadius: borderCorrectionDefinition,\n    boxShadow: {\n        process: correctBoxShadow,\n    },\n};\n\nvar progressTarget = 1000;\nvar Animate = /** @class */ (function (_super) {\n    tslib.__extends(Animate, _super);\n    function Animate() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A mutable object that tracks the target viewport box\n         * for the current animation frame.\n         */\n        _this.frameTarget = axisBox();\n        /**\n         * The current animation target, we use this to check whether to start\n         * a new animation or continue the existing one.\n         */\n        _this.currentAnimationTarget = axisBox();\n        /**\n         * Track whether we're animating this axis.\n         */\n        _this.isAnimating = {\n            x: false,\n            y: false,\n        };\n        _this.stopAxisAnimation = {\n            x: undefined,\n            y: undefined,\n        };\n        _this.isAnimatingTree = false;\n        _this.animate = function (target, origin, _a) {\n            if (_a === void 0) { _a = {}; }\n            var originBox = _a.originBox, targetBox = _a.targetBox, visibilityAction = _a.visibilityAction, shouldStackAnimate = _a.shouldStackAnimate, onComplete = _a.onComplete, prevParent = _a.prevParent, config = tslib.__rest(_a, [\"originBox\", \"targetBox\", \"visibilityAction\", \"shouldStackAnimate\", \"onComplete\", \"prevParent\"]);\n            var _b = _this.props, visualElement = _b.visualElement, layout = _b.layout;\n            /**\n             * Early return if we've been instructed not to animate this render.\n             */\n            if (shouldStackAnimate === false) {\n                _this.isAnimatingTree = false;\n                return _this.safeToRemove();\n            }\n            /**\n             * Prioritise tree animations\n             */\n            if (_this.isAnimatingTree && shouldStackAnimate !== true) {\n                return;\n            }\n            else if (shouldStackAnimate) {\n                _this.isAnimatingTree = true;\n            }\n            /**\n             * Allow the measured origin (prev bounding box) and target (actual layout) to be\n             * overridden by the provided config.\n             */\n            origin = originBox || origin;\n            target = targetBox || target;\n            /**\n             * If this element has a projecting parent, there's an opportunity to animate\n             * it relatively to that parent rather than relatively to the viewport. This\n             * allows us to add orchestrated animations.\n             */\n            var isRelative = false;\n            var projectionParent = visualElement.getProjectionParent();\n            if (projectionParent) {\n                var prevParentViewportBox = projectionParent.prevViewportBox;\n                var parentLayout = projectionParent.getLayoutState().layout;\n                /**\n                 * If we're being provided a previous parent VisualElement by AnimateSharedLayout\n                 */\n                if (prevParent) {\n                    /**\n                     * If we've been provided an explicit target box it means we're animating back\n                     * to this previous parent. So we can make a relative box by comparing to the previous\n                     * parent's layout\n                     */\n                    if (targetBox) {\n                        parentLayout = prevParent.getLayoutState().layout;\n                    }\n                    /**\n                     * Likewise if we've been provided an explicit origin box it means we're\n                     * animating out from a different element. So we should figure out where that was\n                     * on screen relative to the new parent element.\n                     */\n                    if (originBox &&\n                        !checkIfParentHasChanged(prevParent, projectionParent) &&\n                        prevParent.prevViewportBox) {\n                        prevParentViewportBox = prevParent.prevViewportBox;\n                    }\n                }\n                if (prevParentViewportBox &&\n                    isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox)) {\n                    isRelative = true;\n                    origin = calcRelativeOffset(prevParentViewportBox, origin);\n                    target = calcRelativeOffset(parentLayout, target);\n                }\n            }\n            var boxHasMoved = hasMoved(origin, target);\n            var animations = eachAxis(function (axis) {\n                var _a, _b;\n                /**\n                 * If layout is set to \"position\", we can resize the origin box based on the target\n                 * box and only animate its position.\n                 */\n                if (layout === \"position\") {\n                    var targetLength = target[axis].max - target[axis].min;\n                    origin[axis].max = origin[axis].min + targetLength;\n                }\n                if (visualElement.projection.isTargetLocked) {\n                    return;\n                }\n                else if (visibilityAction !== undefined) {\n                    visualElement.setVisibility(visibilityAction === exports.VisibilityAction.Show);\n                }\n                else if (boxHasMoved) {\n                    // If the box has moved, animate between it's current visual state and its\n                    // final state\n                    return _this.animateAxis(axis, target[axis], origin[axis], tslib.__assign(tslib.__assign({}, config), { isRelative: isRelative }));\n                }\n                else {\n                    (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    // If the box has remained in the same place, immediately set the axis target\n                    // to the final desired state\n                    return visualElement.setProjectionTargetAxis(axis, target[axis].min, target[axis].max, isRelative);\n                }\n            });\n            // Force a render to ensure there's no flash of uncorrected bounding box.\n            visualElement.syncRender();\n            /**\n             * If this visualElement isn't present (ie it's been removed from the tree by the user but\n             * kept in by the tree by AnimatePresence) then call safeToRemove when all axis animations\n             * have successfully finished.\n             */\n            return Promise.all(animations).then(function () {\n                _this.isAnimatingTree = false;\n                onComplete && onComplete();\n                visualElement.notifyLayoutAnimationComplete();\n            });\n        };\n        return _this;\n    }\n    Animate.prototype.componentDidMount = function () {\n        var _this = this;\n        var visualElement = this.props.visualElement;\n        visualElement.animateMotionValue = startAnimation;\n        visualElement.enableLayoutProjection();\n        this.unsubLayoutReady = visualElement.onLayoutUpdate(this.animate);\n        visualElement.layoutSafeToRemove = function () { return _this.safeToRemove(); };\n        addScaleCorrection(defaultScaleCorrectors);\n    };\n    Animate.prototype.componentWillUnmount = function () {\n        var _this = this;\n        this.unsubLayoutReady();\n        eachAxis(function (axis) { var _a, _b; return (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a); });\n    };\n    /**\n     * TODO: This manually performs animations on the visualElement's layout progress\n     * values. It'd be preferable to amend the startLayoutAxisAnimation\n     * API to accept more custom animations like this.\n     */\n    Animate.prototype.animateAxis = function (axis, target, origin, _a) {\n        var _this = this;\n        var _b, _c;\n        var _d = _a === void 0 ? {} : _a, transition = _d.transition, isRelative = _d.isRelative;\n        /**\n         * If we're not animating to a new target, don't run this animation\n         */\n        if (this.isAnimating[axis] &&\n            axisIsEqual(target, this.currentAnimationTarget[axis])) {\n            return;\n        }\n        (_c = (_b = this.stopAxisAnimation)[axis]) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.isAnimating[axis] = true;\n        var visualElement = this.props.visualElement;\n        var frameTarget = this.frameTarget[axis];\n        var layoutProgress = visualElement.getProjectionAnimationProgress()[axis];\n        /**\n         * Set layout progress back to 0. We set it twice to hard-reset any velocity that might\n         * be re-incoporated into a subsequent spring animation.\n         */\n        layoutProgress.clearListeners();\n        layoutProgress.set(0);\n        layoutProgress.set(0);\n        /**\n         * Create an animation function to run once per frame. This will tween the visual bounding box from\n         * origin to target using the latest progress value.\n         */\n        var frame = function () {\n            // Convert the latest layoutProgress, which is a value from 0-1000, into a 0-1 progress\n            var p = layoutProgress.get() / progressTarget;\n            // Tween the axis and update the visualElement with the latest values\n            tweenAxis(frameTarget, origin, target, p);\n            visualElement.setProjectionTargetAxis(axis, frameTarget.min, frameTarget.max, isRelative);\n        };\n        // Synchronously run a frame to ensure there's no flash of the uncorrected bounding box.\n        frame();\n        // Create a function to stop animation on this specific axis\n        var unsubscribeProgress = layoutProgress.onChange(frame);\n        this.stopAxisAnimation[axis] = function () {\n            _this.isAnimating[axis] = false;\n            layoutProgress.stop();\n            unsubscribeProgress();\n        };\n        this.currentAnimationTarget[axis] = target;\n        var layoutTransition = transition ||\n            visualElement.getDefaultTransition() ||\n            defaultLayoutTransition;\n        // Start the animation on this axis\n        var animation = startAnimation(axis === \"x\" ? \"layoutX\" : \"layoutY\", layoutProgress, progressTarget, layoutTransition && getValueTransition(layoutTransition, \"layout\")).then(this.stopAxisAnimation[axis]);\n        return animation;\n    };\n    Animate.prototype.safeToRemove = function () {\n        var _a, _b;\n        (_b = (_a = this.props).safeToRemove) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    Animate.prototype.render = function () {\n        return null;\n    };\n    return Animate;\n}(React__namespace.Component));\nfunction AnimateLayoutContextProvider(props) {\n    var _a = tslib.__read(usePresence(), 2), safeToRemove = _a[1];\n    return React__namespace.createElement(Animate, tslib.__assign({}, props, { safeToRemove: safeToRemove }));\n}\nfunction hasMoved(a, b) {\n    return (!isZeroBox(a) &&\n        !isZeroBox(b) &&\n        (!axisIsEqual(a.x, b.x) || !axisIsEqual(a.y, b.y)));\n}\nvar zeroAxis = { min: 0, max: 0 };\nfunction isZeroBox(a) {\n    return axisIsEqual(a.x, zeroAxis) && axisIsEqual(a.y, zeroAxis);\n}\nfunction axisIsEqual(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nvar defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox) {\n    return prevParent || (!prevParent && !(originBox || targetBox));\n}\n\n/**\n * Default handlers for batching VisualElements\n */\nvar defaultHandler = {\n    layoutReady: function (child) { return child.notifyLayoutReady(); },\n};\n/**\n * Create a batcher to process VisualElements\n */\nfunction createBatcher() {\n    var queue = new Set();\n    return {\n        add: function (child) { return queue.add(child); },\n        flush: function (_a) {\n            var _b = _a === void 0 ? defaultHandler : _a, layoutReady = _b.layoutReady, parent = _b.parent;\n            batchLayout(function (read, write) {\n                var order = Array.from(queue).sort(compareByDepth);\n                var ancestors = parent\n                    ? collectProjectingAncestors(parent)\n                    : [];\n                write(function () {\n                    var allElements = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(ancestors)), tslib.__read(order));\n                    allElements.forEach(function (element) { return element.resetTransform(); });\n                });\n                read(function () {\n                    order.forEach(updateLayoutMeasurement);\n                });\n                write(function () {\n                    ancestors.forEach(function (element) { return element.restoreTransform(); });\n                    order.forEach(layoutReady);\n                });\n                read(function () {\n                    /**\n                     * After all children have started animating, ensure any Entering components are set to Present.\n                     * If we add deferred animations (set up all animations and then start them in two loops) this\n                     * could be moved to the start loop. But it needs to happen after all the animations configs\n                     * are generated in AnimateSharedLayout as this relies on presence data\n                     */\n                    order.forEach(function (child) {\n                        if (child.isPresent)\n                            child.presence = Presence.Present;\n                    });\n                });\n                write(function () {\n                    /**\n                     * Starting these animations will have queued jobs on the frame loop. In some situations,\n                     * like when removing an element, these will be processed too late after the DOM is manipulated,\n                     * leaving a flash of incorrectly-projected content. By manually flushing these jobs\n                     * we ensure there's no flash.\n                     */\n                    sync.flushSync.preRender();\n                    sync.flushSync.render();\n                });\n                read(function () {\n                    /**\n                     * Schedule a callback at the end of the following frame to assign the latest projection\n                     * box to the prevViewportBox snapshot. Once global batching is in place this could be run\n                     * synchronously. But for now it ensures that if any nested `AnimateSharedLayout` top-level\n                     * child attempts to calculate its previous relative position against a prevViewportBox\n                     * it will be against its latest projection box instead, as the snapshot is useless beyond this\n                     * render.\n                     */\n                    sync__default['default'].postRender(function () {\n                        return order.forEach(assignProjectionToSnapshot);\n                    });\n                    queue.clear();\n                });\n            });\n            // TODO: Need to find a layout-synchronous way of flushing this\n            flushLayout();\n        },\n    };\n}\nfunction assignProjectionToSnapshot(child) {\n    child.prevViewportBox = child.projection.target;\n}\n\nvar SharedLayoutContext = React.createContext(createBatcher());\n/**\n * @internal\n */\nvar FramerTreeLayoutContext = React.createContext(createBatcher());\nfunction isSharedLayout(context) {\n    return !!context.forceUpdate;\n}\n\n/**\n * This component is responsible for scheduling the measuring of the motion component\n */\nvar Measure = /** @class */ (function (_super) {\n    tslib.__extends(Measure, _super);\n    function Measure() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * If this is a child of a SyncContext, register the VisualElement with it on mount.\n     */\n    Measure.prototype.componentDidMount = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, framerSyncLayout = _a.framerSyncLayout, visualElement = _a.visualElement;\n        isSharedLayout(syncLayout) && syncLayout.register(visualElement);\n        isSharedLayout(framerSyncLayout) &&\n            framerSyncLayout.register(visualElement);\n        visualElement.onUnmount(function () {\n            if (isSharedLayout(syncLayout)) {\n                syncLayout.remove(visualElement);\n            }\n            if (isSharedLayout(framerSyncLayout)) {\n                framerSyncLayout.remove(visualElement);\n            }\n        });\n    };\n    /**\n     * If this is a child of a SyncContext, notify it that it needs to re-render. It will then\n     * handle the snapshotting.\n     *\n     * If it is stand-alone component, add it to the batcher.\n     */\n    Measure.prototype.getSnapshotBeforeUpdate = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, visualElement = _a.visualElement;\n        if (isSharedLayout(syncLayout)) {\n            syncLayout.syncUpdate();\n        }\n        else {\n            snapshotViewportBox(visualElement);\n            syncLayout.add(visualElement);\n        }\n        return null;\n    };\n    Measure.prototype.componentDidUpdate = function () {\n        var syncLayout = this.props.syncLayout;\n        if (!isSharedLayout(syncLayout))\n            syncLayout.flush();\n    };\n    Measure.prototype.render = function () {\n        return null;\n    };\n    return Measure;\n}(React__default['default'].Component));\nfunction MeasureContextProvider(props) {\n    var syncLayout = React.useContext(SharedLayoutContext);\n    var framerSyncLayout = React.useContext(FramerTreeLayoutContext);\n    return (React__default['default'].createElement(Measure, tslib.__assign({}, props, { syncLayout: syncLayout, framerSyncLayout: framerSyncLayout })));\n}\n\nvar layoutAnimations = {\n    measureLayout: MeasureContextProvider,\n    layoutAnimation: AnimateLayoutContextProvider,\n};\n\nvar createProjectionState = function () { return ({\n    isEnabled: false,\n    isHydrated: false,\n    isTargetLocked: false,\n    target: axisBox(),\n    targetFinal: axisBox(),\n}); };\nfunction createLayoutState() {\n    return {\n        isHydrated: false,\n        layout: axisBox(),\n        layoutCorrected: axisBox(),\n        treeScale: { x: 1, y: 1 },\n        delta: delta(),\n        deltaFinal: delta(),\n        deltaTransform: \"\",\n    };\n}\nvar zeroLayout = createLayoutState();\n\n/**\n * Build a transform style that takes a calculated delta between the element's current\n * space on screen and projects it into the desired space.\n */\nfunction buildLayoutProjectionTransform(_a, treeScale, latestTransform) {\n    var x = _a.x, y = _a.y;\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    var xTranslate = x.translate / treeScale.x;\n    var yTranslate = y.translate / treeScale.y;\n    var transform = \"translate3d(\" + xTranslate + \"px, \" + yTranslate + \"px, 0) \";\n    if (latestTransform) {\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n        if (rotate)\n            transform += \"rotate(\" + rotate + \") \";\n        if (rotateX)\n            transform += \"rotateX(\" + rotateX + \") \";\n        if (rotateY)\n            transform += \"rotateY(\" + rotateY + \") \";\n    }\n    transform += \"scale(\" + x.scale + \", \" + y.scale + \")\";\n    return !latestTransform && transform === identityProjection ? \"\" : transform;\n}\n/**\n * Take the calculated delta origin and apply it as a transform string.\n */\nfunction buildLayoutProjectionTransformOrigin(_a) {\n    var deltaFinal = _a.deltaFinal;\n    return deltaFinal.x.origin * 100 + \"% \" + deltaFinal.y.origin * 100 + \"% 0\";\n}\nvar identityProjection = buildLayoutProjectionTransform(zeroLayout.delta, zeroLayout.treeScale, { x: 1, y: 1 });\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            return names.forEach(function (name) {\n                var _a;\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                var on = \"on\" + name;\n                var propListener = props[on];\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args)));\n        };\n    });\n    return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\n    var target = _b.target;\n    /**\n     * Reset the corrected box with the latest values from box, as we're then going\n     * to perform mutative operations on it.\n     */\n    resetBox(layoutCorrected, layout);\n    /**\n     * Apply all the parent deltas to this box to produce the corrected box. This\n     * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n     */\n    applyTreeDeltas(layoutCorrected, treeScale, treePath);\n    /**\n     * Update the delta between the corrected box and the target box before user-set transforms were applied.\n     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n     * for our layout reprojection, but still allow them to be scaled correctly by the user.\n     * It might be that to simplify this we may want to accept that user-set scale is also corrected\n     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n     * to allow people to choose whether these styles are corrected based on just the\n     * layout reprojection or the final bounding box.\n     */\n    updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\n}\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\nfunction setCurrentViewportBox(visualElement) {\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent) {\n        visualElement.rebaseProjectionTarget();\n        return;\n    }\n    var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    eachAxis(function (axis) {\n        visualElement.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\n    });\n}\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, resetTransform = _a.resetTransform, restoreTransform = _a.restoreTransform, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState;\n        if (options === void 0) { options = {}; }\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender and onViewportBoxUpdate.\n         */\n        var lifecycles = createLifecycles();\n        /**\n         *\n         */\n        var projection = createProjectionState();\n        /**\n         * A reference to the nearest projecting parent. This is either\n         * undefined if we haven't looked for the nearest projecting parent,\n         * false if there is no parent performing layout projection, or a reference\n         * to the projecting parent.\n         */\n        var projectionParent;\n        /**\n         * This is a reference to the visual state of the \"lead\" visual element.\n         * Usually, this will be this visual element. But if it shares a layoutId\n         * with other visual elements, only one of them will be designated lead by\n         * AnimateSharedLayout. All the other visual elements will take on the visual\n         * appearance of the lead while they crossfade to it.\n         */\n        var leadProjection = projection;\n        var leadLatestValues = latestValues;\n        var unsubscribeFromLeadVisualElement;\n        /**\n         * The latest layout measurements and calculated projections. This\n         * is seperate from the target projection data in visualState as\n         * many visual elements might point to the same piece of visualState as\n         * a target, whereas they might each have different layouts and thus\n         * projection calculations needed to project into the same viewport box.\n         */\n        var layoutState = createLayoutState();\n        /**\n         *\n         */\n        var crossfader;\n        /**\n         * Keep track of whether the viewport box has been updated since the\n         * last time the layout projection was re-calculated.\n         */\n        var hasViewportBoxUpdated = false;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * x/y motion values that track the progress of initiated layout\n         * animations.\n         *\n         * TODO: Target for removal\n         */\n        var projectionTargetProgress;\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = tslib.__assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         *\n         */\n        function render() {\n            if (!instance)\n                return;\n            if (element.isProjectionReady()) {\n                /**\n                 * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n                 * This is the final box that we will then project into by calculating a transform delta and\n                 * applying it to the corrected box.\n                 */\n                applyBoxTransforms(leadProjection.targetFinal, leadProjection.target, leadLatestValues);\n                /**\n                 * Update the delta between the corrected box and the final target box, after\n                 * user-set transforms are applied to it. This will be used by the renderer to\n                 * create a transform style that will reproject the element from its actual layout\n                 * into the desired bounding box.\n                 */\n                updateBoxDelta(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);\n            }\n            triggerBuild();\n            renderInstance(instance, renderState);\n        }\n        function triggerBuild() {\n            var valuesToRender = latestValues;\n            if (crossfader && crossfader.isActive()) {\n                var crossfadedValues = crossfader.getCrossfadeState(element);\n                if (crossfadedValues)\n                    valuesToRender = crossfadedValues;\n            }\n            build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        function updateLayoutProjection() {\n            if (!element.isProjectionReady())\n                return;\n            var delta = layoutState.delta, treeScale = layoutState.treeScale;\n            var prevTreeScaleX = treeScale.x;\n            var prevTreeScaleY = treeScale.y;\n            var prevDeltaTransform = layoutState.deltaTransform;\n            updateLayoutDeltas(layoutState, leadProjection, element.path, latestValues);\n            hasViewportBoxUpdated &&\n                element.notifyViewportBoxUpdate(leadProjection.target, delta);\n            hasViewportBoxUpdated = false;\n            var deltaTransform = buildLayoutProjectionTransform(delta, treeScale);\n            if (deltaTransform !== prevDeltaTransform ||\n                // Also compare calculated treeScale, for values that rely on this only for scale correction\n                prevTreeScaleX !== treeScale.x ||\n                prevTreeScaleY !== treeScale.y) {\n                element.scheduleRender();\n            }\n            layoutState.deltaTransform = deltaTransform;\n        }\n        function updateTreeLayoutProjection() {\n            element.layoutTree.forEach(fireUpdateLayoutProjection);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync__default['default'].update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = tslib.__assign(tslib.__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             * An ancestor path back to the root visual element. This is used\n             * by layout projection to quickly recurse back up the tree.\n             */\n            path: parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path)), [parent]) : [], layoutTree: parent ? parent.layoutTree : new FlatTree(), \n            /**\n             *\n             */\n            presenceId: presenceId,\n            projection: projection, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by AnimateSharedLayout, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                instance = element.current = newInstance;\n                element.pointTo(element);\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            },\n            /**\n             *\n             */\n            unmount: function () {\n                sync.cancelSync.update(update);\n                sync.cancelSync.render(render);\n                sync.cancelSync.preRender(element.updateLayoutProjection);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                element.stopLayoutAnimation();\n                element.layoutTree.remove(element);\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                lifecycles.clearAllListeners();\n            },\n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () { return closestVariantNode.variantChildren.delete(child); };\n                }\n            },\n            sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * A method that schedules an update to layout projections throughout\n             * the tree. We inherit from the parent so there's only ever one\n             * job scheduled on the next frame - that of the root visual element.\n             */\n            scheduleUpdateLayoutProjection: parent\n                ? parent.scheduleUpdateLayoutProjection\n                : function () {\n                    return sync__default['default'].preRender(element.updateTreeLayoutProjection, false, true);\n                }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            },\n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            },\n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            },\n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) { var _a; return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options); }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            },\n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            },\n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync__default['default'].render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            },\n            // Layout projection ==============================\n            /**\n             * Enable layout projection for this visual element. Won't actually\n             * occur until we also have hydrated layout measurements.\n             */\n            enableLayoutProjection: function () {\n                projection.isEnabled = true;\n                element.layoutTree.add(element);\n            },\n            /**\n             * Lock the projection target, for instance when dragging, so\n             * nothing else can try and animate it.\n             */\n            lockProjectionTarget: function () {\n                projection.isTargetLocked = true;\n            },\n            unlockProjectionTarget: function () {\n                element.stopLayoutAnimation();\n                projection.isTargetLocked = false;\n            }, getLayoutState: function () { return layoutState; }, setCrossfader: function (newCrossfader) {\n                crossfader = newCrossfader;\n            }, isProjectionReady: function () {\n                return projection.isEnabled &&\n                    projection.isHydrated &&\n                    layoutState.isHydrated;\n            }, \n            /**\n             * Start a layout animation on a given axis.\n             */\n            startLayoutAnimation: function (axis, transition, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var progress = element.getProjectionAnimationProgress()[axis];\n                var _a = isRelative\n                    ? projection.relativeTarget[axis]\n                    : projection.target[axis], min = _a.min, max = _a.max;\n                var length = max - min;\n                progress.clearListeners();\n                progress.set(min);\n                progress.set(min); // Set twice to hard-reset velocity\n                progress.onChange(function (v) {\n                    element.setProjectionTargetAxis(axis, v, v + length, isRelative);\n                });\n                return element.animateMotionValue(axis, progress, 0, transition);\n            },\n            /**\n             * Stop layout animations.\n             */\n            stopLayoutAnimation: function () {\n                eachAxis(function (axis) {\n                    return element.getProjectionAnimationProgress()[axis].stop();\n                });\n            },\n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function (withTransform) {\n                if (withTransform === void 0) { withTransform = true; }\n                var viewportBox = measureViewportBox(instance, options);\n                if (!withTransform)\n                    removeBoxTransforms(viewportBox, latestValues);\n                return viewportBox;\n            },\n            /**\n             * Get the motion values tracking the layout animations on each\n             * axis. Lazy init if not already created.\n             */\n            getProjectionAnimationProgress: function () {\n                projectionTargetProgress || (projectionTargetProgress = {\n                    x: motionValue(0),\n                    y: motionValue(0),\n                });\n                return projectionTargetProgress;\n            },\n            /**\n             * Update the projection of a single axis. Schedule an update to\n             * the tree layout projection.\n             */\n            setProjectionTargetAxis: function (axis, min, max, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var target;\n                if (isRelative) {\n                    if (!projection.relativeTarget) {\n                        projection.relativeTarget = axisBox();\n                    }\n                    target = projection.relativeTarget[axis];\n                }\n                else {\n                    projection.relativeTarget = undefined;\n                    target = projection.target[axis];\n                }\n                projection.isHydrated = true;\n                target.min = min;\n                target.max = max;\n                // Flag that we want to fire the onViewportBoxUpdate event handler\n                hasViewportBoxUpdated = true;\n                lifecycles.notifySetAxisTarget();\n            },\n            /**\n             * Rebase the projection target on top of the provided viewport box\n             * or the measured layout. This ensures that non-animating elements\n             * don't fall out of sync differences in measurements vs projections\n             * after a page scroll or other relayout.\n             */\n            rebaseProjectionTarget: function (force, box) {\n                if (box === void 0) { box = layoutState.layout; }\n                var _a = element.getProjectionAnimationProgress(), x = _a.x, y = _a.y;\n                var shouldRebase = !projection.relativeTarget &&\n                    !projection.isTargetLocked &&\n                    !x.isAnimating() &&\n                    !y.isAnimating();\n                if (force || shouldRebase) {\n                    eachAxis(function (axis) {\n                        var _a = box[axis], min = _a.min, max = _a.max;\n                        element.setProjectionTargetAxis(axis, min, max);\n                    });\n                }\n            },\n            /**\n             * Notify the visual element that its layout is up-to-date.\n             * Currently Animate.tsx uses this to check whether a layout animation\n             * needs to be performed.\n             */\n            notifyLayoutReady: function (config) {\n                setCurrentViewportBox(element);\n                element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config);\n            }, \n            /**\n             * Temporarily reset the transform of the instance.\n             */\n            resetTransform: function () { return resetTransform(element, instance, props); }, restoreTransform: function () { return restoreTransform(instance, renderState); }, updateLayoutProjection: updateLayoutProjection,\n            updateTreeLayoutProjection: function () {\n                element.layoutTree.forEach(fireResolveRelativeTargetBox);\n                /**\n                 * Schedule the projection updates at the end of the current preRender\n                 * step. This will ensure that all layout trees will first resolve\n                 * relative projection boxes into viewport boxes, and *then*\n                 * update projections.\n                 */\n                sync__default['default'].preRender(updateTreeLayoutProjection, false, true);\n                // sync.postRender(() => element.scheduleUpdateLayoutProjection())\n            },\n            getProjectionParent: function () {\n                if (projectionParent === undefined) {\n                    var foundParent = false;\n                    // Search backwards through the tree path\n                    for (var i = element.path.length - 1; i >= 0; i--) {\n                        var ancestor = element.path[i];\n                        if (ancestor.projection.isEnabled) {\n                            foundParent = ancestor;\n                            break;\n                        }\n                    }\n                    projectionParent = foundParent;\n                }\n                return projectionParent;\n            },\n            resolveRelativeTargetBox: function () {\n                var relativeParent = element.getProjectionParent();\n                if (!projection.relativeTarget || !relativeParent)\n                    return;\n                calcRelativeBox(projection, relativeParent.projection);\n                if (isDraggable(relativeParent)) {\n                    var target = projection.target;\n                    applyBoxTransforms(target, target, relativeParent.getLatestValues());\n                }\n            },\n            shouldResetTransform: function () {\n                return Boolean(props._layoutResetTransform);\n            },\n            /**\n             *\n             */\n            pointTo: function (newLead) {\n                leadProjection = newLead.projection;\n                leadLatestValues = newLead.getLatestValues();\n                /**\n                 * Subscribe to lead component's layout animations\n                 */\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                unsubscribeFromLeadVisualElement = popmotion.pipe(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function () {\n                    var _a;\n                    if (element.isPresent) {\n                        element.presence = Presence.Present;\n                    }\n                    else {\n                        (_a = element.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(element);\n                    }\n                }));\n            }, \n            // TODO: Clean this up\n            isPresent: true, presence: Presence.Entering });\n        return element;\n    };\n};\nfunction fireResolveRelativeTargetBox(child) {\n    child.resolveRelativeTargetBox();\n}\nfunction fireUpdateLayoutProjection(child) {\n    child.updateLayoutProjection();\n}\nvar variantProps = tslib.__spreadArray([\"initial\"], tslib.__read(variantPriorityOrder));\nvar numVariantProps = variantProps.length;\n\nvar positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\nvar hasPositionalKey = function (target) {\n    return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function (value, to) {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nvar isNumOrPxType = function (v) {\n    return v === styleValueTypes.number || v === styleValueTypes.px;\n};\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\n    var transform = _a.transform;\n    if (transform === \"none\" || !transform)\n        return 0;\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n}; };\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\nfunction removeNonTranslationalTransform(visualElement) {\n    var removedTransforms = [];\n    nonTranslationalTransformKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nvar positionalValues = {\n    // Dimensions\n    width: function (_a) {\n        var x = _a.x;\n        return x.max - x.min;\n    },\n    height: function (_a) {\n        var y = _a.y;\n        return y.max - y.min;\n    },\n    top: function (_bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (_bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (_a, _b) {\n        var y = _a.y;\n        var top = _b.top;\n        return parseFloat(top) + (y.max - y.min);\n    },\n    right: function (_a, _b) {\n        var x = _a.x;\n        var left = _b.left;\n        return parseFloat(left) + (x.max - x.min);\n    },\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n    var originBbox = visualElement.measureViewportBox();\n    var element = visualElement.getInstance();\n    var elementComputedStyle = getComputedStyle(element);\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    var targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach(function (key) {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        var value = visualElement.getValue(key);\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n    if (origin === void 0) { origin = {}; }\n    if (transitionEnd === void 0) { transitionEnd = {}; }\n    target = tslib.__assign({}, target);\n    transitionEnd = tslib.__assign({}, transitionEnd);\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    var removedTransformValues = [];\n    var hasAttemptedToRemoveTransformValues = false;\n    var changedValueTypeKeys = [];\n    targetPositionalKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        var from = origin[key];\n        var to = target[key];\n        var fromType = findDimensionValueType(from);\n        var toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            var numKeyframes = to.length;\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    heyListen.invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    heyListen.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                var current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === styleValueTypes.px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues = removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(function (_a) {\n                var _b = tslib.__read(_a, 2), key = _b[0], value = _b[1];\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        return { target: convertedTarget, transitionEnd: transitionEnd };\n    }\n    else {\n        return { target: target, transitionEnd: transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target: target, transitionEnd: transitionEnd };\n}\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nfunction getComputedStyle$1(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle$1(domElement);\n            return ((isCSSVariable$1(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return getBoundingBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return tslib.__assign({ transition: transition,\n            transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n    build: function (element, renderState, latestValues, projection, layoutState, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nvar svgVisualElement = visualElement(tslib.__assign(tslib.__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    }, render: renderSVG }));\n\nvar createDomVisualElement = function (Component, options) {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nvar featureBundle = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, animations), gestureAnimations), drag), layoutAnimations);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nvar motion = /*@__PURE__*/ createMotionProxy(function (Component, config) {\n    return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement);\n});\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement));\n}\n\n/**\n * @public\n */\nvar m = createMotionProxy(createDomMotionConfig);\n\nfunction useForceUpdate() {\n    var unloadingRef = React.useRef(false);\n    var _a = tslib.__read(React.useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return React.useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = React.useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    React.useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React__namespace.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React__namespace.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    React.Children.forEach(children, function (child) {\n        if (React.isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = React.useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = React.useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = React.useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = React.useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = React.useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React__namespace.createElement(React__namespace.Fragment, null, filteredChildren.map(function (child) { return (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = tslib.__spreadArray([], tslib.__read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return React.cloneElement(child); })));\n};\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n    };\n}\n\nfunction createCrossfader() {\n    /**\n     * The current state of the crossfade as a value between 0 and 1\n     */\n    var progress = motionValue(1);\n    var options = {\n        lead: undefined,\n        follow: undefined,\n        crossfadeOpacity: false,\n        preserveFollowOpacity: false,\n    };\n    var prevOptions = tslib.__assign({}, options);\n    var leadState = {};\n    var followState = {};\n    /**\n     *\n     */\n    var isActive = false;\n    /**\n     *\n     */\n    var finalCrossfadeFrame = null;\n    /**\n     * Framestamp of the last frame we updated values at.\n     */\n    var prevUpdate = 0;\n    function startCrossfadeAnimation(target, transition) {\n        var lead = options.lead, follow = options.follow;\n        isActive = true;\n        finalCrossfadeFrame = null;\n        var hasUpdated = false;\n        var onUpdate = function () {\n            hasUpdated = true;\n            lead && lead.scheduleRender();\n            follow && follow.scheduleRender();\n        };\n        var onComplete = function () {\n            isActive = false;\n            /**\n             * If the crossfade animation is no longer active, flag a frame\n             * that we're still allowed to crossfade\n             */\n            finalCrossfadeFrame = sync.getFrameData().timestamp;\n        };\n        transition = transition && getValueTransition(transition, \"crossfade\");\n        return animate(progress, target, tslib.__assign(tslib.__assign({}, transition), { onUpdate: onUpdate, onComplete: function () {\n                if (!hasUpdated) {\n                    progress.set(target);\n                    /**\n                     * If we never ran an update, for instance if this was an instant transition, fire a\n                     * simulated final frame to ensure the crossfade gets applied correctly.\n                     */\n                    sync__default['default'].read(onComplete);\n                }\n                else {\n                    onComplete();\n                }\n                onUpdate();\n            } }));\n    }\n    function updateCrossfade() {\n        var _a, _b;\n        /**\n         * We only want to compute the crossfade once per frame, so we\n         * compare the previous update framestamp with the current frame\n         * and early return if they're the same.\n         */\n        var timestamp = sync.getFrameData().timestamp;\n        var lead = options.lead, follow = options.follow;\n        if (timestamp === prevUpdate || !lead)\n            return;\n        prevUpdate = timestamp;\n        /**\n         * Merge each component's latest values into our crossfaded state\n         * before crossfading.\n         */\n        var latestLeadValues = lead.getLatestValues();\n        Object.assign(leadState, latestLeadValues);\n        var latestFollowValues = follow\n            ? follow.getLatestValues()\n            : options.prevValues;\n        Object.assign(followState, latestFollowValues);\n        var p = progress.get();\n        /**\n         * Crossfade the opacity between the two components. This will result\n         * in a different opacity for each component.\n         */\n        var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;\n        var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;\n        if (options.crossfadeOpacity && follow) {\n            leadState.opacity = popmotion.mix(\n            /**\n             * If the follow child has been completely hidden we animate\n             * this opacity from its previous opacity, but otherwise from completely transparent.\n             */\n            follow.isVisible !== false ? 0 : followTargetOpacity, leadTargetOpacity, easeCrossfadeIn(p));\n            followState.opacity = options.preserveFollowOpacity\n                ? followTargetOpacity\n                : popmotion.mix(followTargetOpacity, 0, easeCrossfadeOut(p));\n        }\n        else if (!follow) {\n            leadState.opacity = popmotion.mix(followTargetOpacity, leadTargetOpacity, p);\n        }\n        mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);\n    }\n    return {\n        isActive: function () {\n            return leadState &&\n                (isActive || sync.getFrameData().timestamp === finalCrossfadeFrame);\n        },\n        fromLead: function (transition) {\n            return startCrossfadeAnimation(0, transition);\n        },\n        toLead: function (transition) {\n            var initialProgress = 0;\n            if (!options.prevValues && !options.follow) {\n                /**\n                 * If we're not coming from anywhere, start at the end of the animation.\n                 */\n                initialProgress = 1;\n            }\n            else if (prevOptions.lead === options.follow &&\n                prevOptions.follow === options.lead) {\n                /**\n                 * If we're swapping follow/lead we can reverse the progress\n                 */\n                initialProgress = 1 - progress.get();\n            }\n            progress.set(initialProgress);\n            return startCrossfadeAnimation(1, transition);\n        },\n        reset: function () { return progress.set(1); },\n        stop: function () { return progress.stop(); },\n        getCrossfadeState: function (element) {\n            updateCrossfade();\n            if (element === options.lead) {\n                return leadState;\n            }\n            else if (element === options.follow) {\n                return followState;\n            }\n        },\n        setOptions: function (newOptions) {\n            prevOptions = options;\n            options = newOptions;\n            leadState = {};\n            followState = {};\n        },\n        getLatestValues: function () {\n            return leadState;\n        },\n    };\n}\nvar easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\nfunction compress(min, max, easing) {\n    return function (p) {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(popmotion.progress(min, max, p));\n    };\n}\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nfunction mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n        var borderLabel = \"border\" + borders[i] + \"Radius\";\n        var followRadius = getRadius(latestFollowValues, borderLabel);\n        var leadRadius = getRadius(latestLeadValues, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        /**\n         * Currently we're only crossfading between numerical border radius.\n         * It would be possible to crossfade between percentages for a little\n         * extra bundle size.\n         */\n        if (typeof followRadius === \"number\" &&\n            typeof leadRadius === \"number\") {\n            var radius = Math.max(popmotion.mix(followRadius, leadRadius, p), 0);\n            leadState[borderLabel] = followState[borderLabel] = radius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (latestFollowValues.rotate || latestLeadValues.rotate) {\n        var rotate = popmotion.mix(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);\n        leadState.rotate = followState.rotate = rotate;\n    }\n    /**\n     * We only want to mix the background color if there's a follow element\n     * that we're not crossfading opacity between. For instance with switch\n     * AnimateSharedLayout animations, this helps the illusion of a continuous\n     * element being animated but also cuts down on the number of paints triggered\n     * for elements where opacity is doing that work for us.\n     */\n    if (!hasFollowElement &&\n        latestLeadValues.backgroundColor &&\n        latestFollowValues.backgroundColor) {\n        /**\n         * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n         * We could probably create a mixer that runs at the start of the animation but\n         * the idea behind the crossfader is that it runs dynamically between two potentially\n         * changing targets (ie opacity or borderRadius may be animating independently via variants)\n         */\n        leadState.backgroundColor = followState.backgroundColor = popmotion.mixColor(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n\nfunction layoutStack() {\n    var stack = new Set();\n    var state = { leadIsExiting: false };\n    var prevState = tslib.__assign({}, state);\n    var prevValues;\n    var prevViewportBox;\n    var prevDragCursor;\n    var crossfader = createCrossfader();\n    var needsCrossfadeAnimation = false;\n    function getFollowViewportBox() {\n        return state.follow ? state.follow.prevViewportBox : prevViewportBox;\n    }\n    function getFollowLayout() {\n        var _a;\n        return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;\n    }\n    return {\n        add: function (element) {\n            element.setCrossfader(crossfader);\n            stack.add(element);\n            /**\n             * Hydrate new element with previous drag position if we have one\n             */\n            if (prevDragCursor)\n                element.prevDragCursor = prevDragCursor;\n            if (!state.lead)\n                state.lead = element;\n        },\n        remove: function (element) {\n            stack.delete(element);\n        },\n        getLead: function () { return state.lead; },\n        updateSnapshot: function () {\n            if (!state.lead)\n                return;\n            prevValues = crossfader.isActive()\n                ? crossfader.getLatestValues()\n                : state.lead.getLatestValues();\n            prevViewportBox = state.lead.prevViewportBox;\n            var dragControls = elementDragControls.get(state.lead);\n            if (dragControls && dragControls.isDragging) {\n                prevDragCursor = dragControls.cursorProgress;\n            }\n        },\n        clearSnapshot: function () {\n            prevDragCursor = prevViewportBox = undefined;\n        },\n        updateLeadAndFollow: function () {\n            var _a;\n            prevState = tslib.__assign({}, state);\n            var lead;\n            var follow;\n            var order = Array.from(stack);\n            for (var i = order.length; i--; i >= 0) {\n                var element = order[i];\n                if (lead)\n                    follow !== null && follow !== void 0 ? follow : (follow = element);\n                lead !== null && lead !== void 0 ? lead : (lead = element);\n                if (lead && follow)\n                    break;\n            }\n            state.lead = lead;\n            state.follow = follow;\n            state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === Presence.Exiting;\n            crossfader.setOptions({\n                lead: lead,\n                follow: follow,\n                prevValues: prevValues,\n                crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot),\n            });\n            if (\n            // Don't crossfade if we've just animated back from lead and switched the\n            // old follow to the new lead.\n            state.lead !== prevState.follow &&\n                (prevState.lead !== state.lead ||\n                    prevState.leadIsExiting !== state.leadIsExiting)) {\n                needsCrossfadeAnimation = true;\n            }\n        },\n        animate: function (child, shouldCrossfade) {\n            var _a;\n            if (shouldCrossfade === void 0) { shouldCrossfade = false; }\n            if (child === state.lead) {\n                if (shouldCrossfade) {\n                    /**\n                     * Point a lead to itself in case it was previously pointing\n                     * to a different visual element\n                     */\n                    child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(true);\n                }\n                var config = {};\n                var prevParent = (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getProjectionParent();\n                if (prevParent) {\n                    /**\n                     * We'll use this to determine if the element or its layoutId has been reparented.\n                     */\n                    config.prevParent = prevParent;\n                }\n                if (child.presence === Presence.Entering) {\n                    config.originBox = getFollowViewportBox();\n                }\n                else if (child.presence === Presence.Exiting) {\n                    config.targetBox = getFollowLayout();\n                }\n                if (needsCrossfadeAnimation) {\n                    needsCrossfadeAnimation = false;\n                    var transition = child.getDefaultTransition();\n                    child.presence === Presence.Entering\n                        ? crossfader.toLead(transition)\n                        : crossfader.fromLead(transition);\n                }\n                child.notifyLayoutReady(config);\n            }\n            else {\n                if (shouldCrossfade) {\n                    state.lead && child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(false);\n                }\n            }\n        },\n    };\n}\n\nfunction resetRotate(child) {\n    // If there's no detected rotation values, we can early return without a forced render.\n    var hasRotate = false;\n    // Keep a record of all the values we've reset\n    var resetValues = {};\n    // Check the rotate value of all axes and reset to 0\n    for (var i = 0; i < transformAxes.length; i++) {\n        var axis = transformAxes[i];\n        var key = \"rotate\" + axis;\n        // If this rotation doesn't exist as a motion value, then we don't\n        // need to reset it\n        if (!child.hasValue(key) || child.getStaticValue(key) === 0)\n            continue;\n        hasRotate = true;\n        // Record the rotation and then temporarily set it to 0\n        resetValues[key] = child.getStaticValue(key);\n        child.setStaticValue(key, 0);\n    }\n    // If there's no rotation values, we don't need to do any more.\n    if (!hasRotate)\n        return;\n    // Force a render of this element to apply the transform with all rotations\n    // set to 0.\n    child.syncRender();\n    // Put back all the values we reset\n    for (var key in resetValues) {\n        child.setStaticValue(key, resetValues[key]);\n    }\n    // Schedule a render for the next frame. This ensures we won't visually\n    // see the element with the reset rotate value applied.\n    child.scheduleRender();\n}\n\n/**\n * @public\n */\nvar AnimateSharedLayout = /** @class */ (function (_super) {\n    tslib.__extends(AnimateSharedLayout, _super);\n    function AnimateSharedLayout() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A list of all the children in the shared layout\n         */\n        _this.children = new Set();\n        /**\n         * As animate components with a defined `layoutId` are added/removed to the tree,\n         * we store them in order. When one is added, it will animate out from the\n         * previous one, and when it's removed, it'll animate to the previous one.\n         */\n        _this.stacks = new Map();\n        /**\n         * Track whether the component has mounted. If it hasn't, the presence of added children\n         * are set to Present, whereas if it has they're considered Entering\n         */\n        _this.hasMounted = false;\n        /**\n         * Track whether we already have an update scheduled. If we don't, we'll run snapshots\n         * and schedule one.\n         */\n        _this.updateScheduled = false;\n        /**\n         * Tracks whether we already have a render scheduled. If we don't, we'll force one with this.forceRender\n         */\n        _this.renderScheduled = false;\n        /**\n         * The methods provided to all children in the shared layout tree.\n         */\n        _this.syncContext = tslib.__assign(tslib.__assign({}, createBatcher()), { syncUpdate: function (force) { return _this.scheduleUpdate(force); }, forceUpdate: function () {\n                // By copying syncContext to itself, when this component re-renders it'll also re-render\n                // all children subscribed to the SharedLayout context.\n                _this.syncContext = tslib.__assign({}, _this.syncContext);\n                _this.scheduleUpdate(true);\n            }, register: function (child) { return _this.addChild(child); }, remove: function (child) { return _this.removeChild(child); } });\n        return _this;\n    }\n    AnimateSharedLayout.prototype.componentDidMount = function () {\n        this.hasMounted = true;\n    };\n    AnimateSharedLayout.prototype.componentDidUpdate = function () {\n        this.startLayoutAnimation();\n    };\n    AnimateSharedLayout.prototype.shouldComponentUpdate = function () {\n        this.renderScheduled = true;\n        return true;\n    };\n    AnimateSharedLayout.prototype.startLayoutAnimation = function () {\n        var _this = this;\n        /**\n         * Reset update and render scheduled status\n         */\n        this.renderScheduled = this.updateScheduled = false;\n        var type = this.props.type;\n        /**\n         * Update presence metadata based on the latest AnimatePresence status.\n         * This is a kind of goofy way of dealing with this, perhaps there's a better model to find.\n         */\n        this.children.forEach(function (child) {\n            if (!child.isPresent) {\n                child.presence = Presence.Exiting;\n            }\n            else if (child.presence !== Presence.Entering) {\n                child.presence =\n                    child.presence === Presence.Exiting\n                        ? Presence.Entering\n                        : Presence.Present;\n            }\n        });\n        this.updateStacks();\n        /**\n         * Create a handler which we can use to flush the children animations\n         */\n        var handler = {\n            layoutReady: function (child) {\n                if (child.getLayoutId() !== undefined) {\n                    var stack = _this.getStack(child);\n                    stack.animate(child, type === \"crossfade\");\n                }\n                else {\n                    child.notifyLayoutReady();\n                }\n            },\n            parent: this.context.visualElement,\n        };\n        /**\n         * Shared layout animations can be used without the AnimateSharedLayout wrapping component.\n         * This requires some co-ordination across components to stop layout thrashing\n         * and ensure measurements are taken at the correct time.\n         *\n         * Here we use that same mechanism of schedule/flush.\n         */\n        this.children.forEach(function (child) { return _this.syncContext.add(child); });\n        this.syncContext.flush(handler);\n        /**\n         * Clear snapshots so subsequent rerenders don't retain memory of outgoing components\n         */\n        this.stacks.forEach(function (stack) { return stack.clearSnapshot(); });\n    };\n    AnimateSharedLayout.prototype.updateStacks = function () {\n        this.stacks.forEach(function (stack) { return stack.updateLeadAndFollow(); });\n    };\n    AnimateSharedLayout.prototype.scheduleUpdate = function (force) {\n        if (force === void 0) { force = false; }\n        if (!(force || !this.updateScheduled))\n            return;\n        /**\n         * Flag we've scheduled an update\n         */\n        this.updateScheduled = true;\n        /**\n         * Write: Reset transforms so bounding boxes can be accurately measured.\n         */\n        this.children.forEach(function (child) {\n            resetRotate(child);\n            if (child.shouldResetTransform())\n                child.resetTransform();\n        });\n        /**\n         * Read: Snapshot children\n         */\n        this.children.forEach(snapshotViewportBox);\n        /**\n         * Every child keeps a local snapshot, but we also want to record\n         * snapshots of the visible children as, if they're are being removed\n         * in this render, we can still access them.\n         *\n         * TODO: What would be better here is doing a single loop where we\n         * only snapshotViewportBoxes of undefined layoutIds and then one for each stack\n         */\n        this.stacks.forEach(function (stack) { return stack.updateSnapshot(); });\n        /**\n         * Force a rerender by setting state if we aren't already going to render.\n         */\n        if (force || !this.renderScheduled) {\n            this.renderScheduled = true;\n            this.forceUpdate();\n        }\n    };\n    AnimateSharedLayout.prototype.addChild = function (child) {\n        this.children.add(child);\n        this.addToStack(child);\n        child.presence = this.hasMounted ? Presence.Entering : Presence.Present;\n    };\n    AnimateSharedLayout.prototype.removeChild = function (child) {\n        this.scheduleUpdate();\n        this.children.delete(child);\n        this.removeFromStack(child);\n    };\n    AnimateSharedLayout.prototype.addToStack = function (child) {\n        var stack = this.getStack(child);\n        stack === null || stack === void 0 ? void 0 : stack.add(child);\n    };\n    AnimateSharedLayout.prototype.removeFromStack = function (child) {\n        var stack = this.getStack(child);\n        stack === null || stack === void 0 ? void 0 : stack.remove(child);\n    };\n    /**\n     * Return a stack of animate children based on the provided layoutId.\n     * Will create a stack if none currently exists with that layoutId.\n     */\n    AnimateSharedLayout.prototype.getStack = function (child) {\n        var id = child.getLayoutId();\n        if (id === undefined)\n            return;\n        // Create stack if it doesn't already exist\n        !this.stacks.has(id) && this.stacks.set(id, layoutStack());\n        return this.stacks.get(id);\n    };\n    AnimateSharedLayout.prototype.render = function () {\n        return (React__namespace.createElement(SharedLayoutContext.Provider, { value: this.syncContext }, this.props.children));\n    };\n    AnimateSharedLayout.contextType = MotionContext;\n    return AnimateSharedLayout;\n}(React__namespace.Component));\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n    var children = _a.children, config = tslib.__rest(_a, [\"children\"]);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = tslib.__assign(tslib.__assign({}, React.useContext(MotionConfigContext)), config);\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(function () { return config.isStatic; });\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    var transitionDependency = typeof config.transition === \"object\"\n        ? config.transition.toString()\n        : \"\";\n    var context = React.useMemo(function () { return config; }, [\n        transitionDependency,\n        config.transformPagePoint,\n    ]);\n    return (React__namespace.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion(_a) {\n    var children = _a.children, features = _a.features, _b = _a.strict, strict = _b === void 0 ? false : _b;\n    var _c = tslib.__read(React.useState(!isLazyBundle(features)), 2), setIsLoaded = _c[1];\n    var loadedRenderer = React.useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        var renderer = features.renderer, loadedFeatures = tslib.__rest(features, [\"renderer\"]);\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    React.useEffect(function () {\n        if (isLazyBundle(features)) {\n            features().then(function (_a) {\n                var renderer = _a.renderer, loadedFeatures = tslib.__rest(_a, [\"renderer\"]);\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict: strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\n/**\n * @public\n */\nvar domAnimation = tslib.__assign(tslib.__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\n/**\n * @public\n */\nvar domMax = tslib.__assign(tslib.__assign(tslib.__assign({}, domAnimation), drag), layoutAnimations);\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * @library\n *\n * ```jsx\n * export function MyComponent() {\n *   const scale = useMotionValue(1)\n *\n *   return <Frame scale={scale} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    var value = useConstant(function () { return motionValue(initial); });\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    if (isStatic) {\n        var _a = tslib.__read(React.useState(initial), 2), setLatest_1 = _a[1];\n        React.useEffect(function () { return value.onChange(setLatest_1); }, []);\n    }\n    return value;\n}\n\nfunction useOnChange(value, callback) {\n    React.useEffect(function () {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n    React.useEffect(function () {\n        var subscriptions = values.map(function (value) { return value.onChange(handler); });\n        return function () { return subscriptions.forEach(function (unsubscribe) { return unsubscribe(); }); };\n    });\n}\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    var value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    var updateValue = function () { return value.set(combineValues()); };\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, function () { return sync__default['default'].update(updateValue, false, true); });\n    return value;\n}\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    var numFragments = fragments.length;\n    function buildValue() {\n        var output = \"\";\n        for (var i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            var value = values[i];\n            if (value)\n                output += values[i].get();\n        }\n        return output;\n    }\n    return useCombineMotionValues(values, buildValue);\n}\n\nvar isCustomValueType = function (v) {\n    return typeof v === \"object\" && v.mix;\n};\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\nfunction transform() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var useImmediate = !Array.isArray(args[0]);\n    var argOffset = useImmediate ? 0 : -1;\n    var inputValue = args[0 + argOffset];\n    var inputRange = args[1 + argOffset];\n    var outputRange = args[2 + argOffset];\n    var options = args[3 + argOffset];\n    var interpolator = popmotion.interpolate(inputRange, outputRange, tslib.__assign({ mixer: getMixer(outputRange[0]) }, options));\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    var transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], function (_a) {\n            var _b = tslib.__read(_a, 1), latest = _b[0];\n            return transformer(latest);\n        });\n}\nfunction useListTransform(values, transformer) {\n    var latest = useConstant(function () { return []; });\n    return useCombineMotionValues(values, function () {\n        latest.length = 0;\n        var numValues = values.length;\n        for (var i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config) {\n    if (config === void 0) { config = {}; }\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    var activeSpringAnimation = React.useRef(null);\n    var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    React.useMemo(function () {\n        return value.attach(function (v, set) {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = popmotion.animate(tslib.__assign(tslib.__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));\n            return value.get();\n        });\n    }, Object.values(config));\n    useOnChange(source, function (v) { return value.set(parseFloat(v)); });\n    return value;\n}\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    var velocity = useMotionValue(value.getVelocity());\n    React.useEffect(function () {\n        return value.velocityUpdateSubscribers.add(function (newVelocity) {\n            velocity.set(newVelocity);\n        });\n    }, [value]);\n    return velocity;\n}\n\nfunction createScrollMotionValues() {\n    return {\n        scrollX: motionValue(0),\n        scrollY: motionValue(0),\n        scrollXProgress: motionValue(0),\n        scrollYProgress: motionValue(0),\n    };\n}\nfunction setProgress(offset, maxOffset, value) {\n    value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\n}\nfunction createScrollUpdater(values, getOffsets) {\n    var update = function () {\n        var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;\n        // Set absolute positions\n        values.scrollX.set(xOffset);\n        values.scrollY.set(yOffset);\n        // Set 0-1 progress\n        setProgress(xOffset, xMaxOffset, values.scrollXProgress);\n        setProgress(yOffset, yMaxOffset, values.scrollYProgress);\n    };\n    update();\n    return update;\n}\n\nvar getElementScrollOffsets = function (element) { return function () {\n    return {\n        xOffset: element.scrollLeft,\n        yOffset: element.scrollTop,\n        xMaxOffset: element.scrollWidth - element.offsetWidth,\n        yMaxOffset: element.scrollHeight - element.offsetHeight,\n    };\n}; };\n/**\n * Returns MotionValues that update when the provided element scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * This element must be set to `overflow: scroll` on either or both axes to report scroll offset.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import {\n *   Frame,\n *   useElementScroll,\n *   useTransform\n * } from \"framer\"\n *\n * export function MyComponent() {\n *   const ref = React.useRef()\n *   const { scrollYProgress } = useElementScroll(ref)\n *\n *   return (\n *     <Frame ref={ref}>\n *       <Frame scaleX={scrollYProgress} />\n *     </Frame>\n *   )\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const ref = useRef()\n *   const { scrollYProgress } = useElementScroll(ref)\n *\n *   return (\n *     <div ref={ref}>\n *       <motion.div style={{ scaleX: scrollYProgress }} />\n *     </div>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction useElementScroll(ref) {\n    var values = useConstant(createScrollMotionValues);\n    useIsomorphicLayoutEffect(function () {\n        var element = ref.current;\n        heyListen.invariant(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\n        if (!element)\n            return;\n        var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\n        var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues, { passive: true });\n        var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\n        return function () {\n            scrollListener && scrollListener();\n            resizeListener && resizeListener();\n        };\n    }, []);\n    return values;\n}\n\nvar viewportScrollValues;\nfunction getViewportScrollOffsets() {\n    return {\n        xOffset: window.pageXOffset,\n        yOffset: window.pageYOffset,\n        xMaxOffset: document.body.clientWidth - window.innerWidth,\n        yMaxOffset: document.body.clientHeight - window.innerHeight,\n    };\n}\nvar hasListeners = false;\nfunction addEventListeners() {\n    hasListeners = true;\n    if (typeof window === \"undefined\")\n        return;\n    var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\n    addDomEvent(window, \"scroll\", updateScrollValues, { passive: true });\n    addDomEvent(window, \"resize\", updateScrollValues);\n}\n/**\n * Returns MotionValues that update when the viewport scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * **Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`\n * values as this breaks the browser's capability to accurately measure the page length.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import {\n *   Frame,\n *   useViewportScroll,\n *   useTransform\n * } from \"framer\"\n *\n * export function MyComponent() {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <Frame scaleX={scrollYProgress} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\n * }\n * ```\n *\n * @public\n */\nfunction useViewportScroll() {\n    /**\n     * Lazy-initialise the viewport scroll values\n     */\n    if (!viewportScrollValues) {\n        viewportScrollValues = createScrollMotionValues();\n    }\n    useIsomorphicLayoutEffect(function () {\n        !hasListeners && addEventListeners();\n    }, []);\n    return viewportScrollValues;\n}\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nvar prefersReducedMotion;\nfunction initPrefersReducedMotion() {\n    prefersReducedMotion = motionValue(null);\n    if (typeof window === \"undefined\")\n        return;\n    if (window.matchMedia) {\n        var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\n        var setReducedMotionPreferences = function () {\n            return prefersReducedMotion.set(motionMediaQuery_1.matches);\n        };\n        motionMediaQuery_1.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.set(false);\n    }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !prefersReducedMotion && initPrefersReducedMotion();\n    var _a = tslib.__read(React.useState(prefersReducedMotion.get()), 2), shouldReduceMotion = _a[0], setShouldReduceMotion = _a[1];\n    useOnChange(prefersReducedMotion, setShouldReduceMotion);\n    return shouldReduceMotion;\n}\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            heyListen.invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, tslib.__spreadArray([], tslib.__read(animation))).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * @library\n *\n * ```jsx\n * import * as React from 'react'\n * import { Frame, useAnimation } from 'framer'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <Frame animate={controls} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = useConstant(animationControls);\n    React.useEffect(controls.mount, []);\n    return controls;\n}\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import { Frame, useCycle } from \"framer\"\n *\n * export function MyComponent() {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <Frame\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @motion\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle() {\n    var items = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        items[_i] = arguments[_i];\n    }\n    var index = React.useRef(0);\n    var _a = tslib.__read(React.useState(items[index.current]), 2), item = _a[0], setItem = _a[1];\n    return [\n        item,\n        function (next) {\n            index.current =\n                typeof next !== \"number\"\n                    ? popmotion.wrap(0, items.length, index.current + 1)\n                    : next;\n            setItem(items[index.current]);\n        },\n    ];\n}\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * @library\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <Frame onTapStart={startDrag} />\n *     <Frame drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @motion\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nvar DragControls = /** @class */ (function () {\n    function DragControls() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    DragControls.prototype.subscribe = function (controls) {\n        var _this = this;\n        this.componentControls.add(controls);\n        return function () { return _this.componentControls.delete(controls); };\n    };\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    DragControls.prototype.start = function (event, options) {\n        this.componentControls.forEach(function (controls) {\n            controls.start(event.nativeEvent || event, options);\n        });\n    };\n    DragControls.prototype.updateConstraints = function (flush) {\n        if (flush === void 0) { flush = true; }\n        this.componentControls.forEach(function (controls) {\n            controls.updateConstraints();\n        });\n        flush && flushLayout();\n    };\n    return DragControls;\n}());\nvar createDragControls = function () { return new DragControls(); };\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * @library\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <Frame onTapStart={startDrag} />\n *     <Frame drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @motion\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nvar createObject = function () { return ({}); };\nvar stateVisualElement = visualElement({\n    build: function () { },\n    measureViewportBox: axisBox,\n    resetTransform: function () { },\n    restoreTransform: function () { },\n    removeValueFromRenderState: function () { },\n    render: function () { },\n    scrapeMotionValuesFromProps: createObject,\n    readValueFromInstance: function (_state, key, options) {\n        return options.initialState[key] || 0;\n    },\n    makeTargetAnimatable: function (element, _a) {\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        checkTargetForNewValues(element, target, origin);\n        return tslib.__assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n});\nvar useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n * @internal\n */\nfunction useAnimatedState(initialState) {\n    var _a = tslib.__read(React.useState(initialState), 2), animationState = _a[0], setAnimationState = _a[1];\n    var visualState = useVisualState({}, false);\n    var element = useConstant(function () {\n        return stateVisualElement({ props: {}, visualState: visualState }, { initialState: initialState });\n    });\n    React.useEffect(function () {\n        element.mount({});\n        return element.unmount();\n    }, []);\n    React.useEffect(function () {\n        element.setProps({\n            onUpdate: function (v) { return setAnimationState(tslib.__assign({}, v)); },\n        });\n    });\n    var startAnimation = useConstant(function () { return function (animationDefinition) {\n        return animateVisualElement(element, animationDefinition);\n    }; });\n    return [animationState, startAnimation];\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\nvar maxScale = 100000;\nvar invertScale = function (scale) {\n    return scale > 0.001 ? 1 / scale : maxScale;\n};\nvar hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * @motion\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @library\n *\n * ```jsx\n * function MyComponent() {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <Frame scaleX={scaleX} scaleY={scaleY} />\n * }\n * ```\n *\n * @deprecated\n * @internal\n */\nfunction useInvertedScale(scale) {\n    var parentScaleX = useMotionValue(1);\n    var parentScaleY = useMotionValue(1);\n    var visualElement = useVisualElementContext();\n    heyListen.invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    heyListen.warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n        parentScaleX = scale.scaleX || parentScaleX;\n        parentScaleY = scale.scaleY || parentScaleY;\n    }\n    else if (visualElement) {\n        parentScaleX = visualElement.getValue(\"scaleX\", 1);\n        parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    var scaleX = useTransform(parentScaleX, invertScale);\n    var scaleY = useTransform(parentScaleY, invertScale);\n    return { scaleX: scaleX, scaleY: scaleY };\n}\n\nexports.AnimatePresence = AnimatePresence;\nexports.AnimateSharedLayout = AnimateSharedLayout;\nexports.DragControls = DragControls;\nexports.FlatTree = FlatTree;\nexports.FramerTreeLayoutContext = FramerTreeLayoutContext;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyMotion = LazyMotion;\nexports.MotionConfig = MotionConfig;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.SharedLayoutContext = SharedLayoutContext;\nexports.addScaleCorrection = addScaleCorrection;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animationControls = animationControls;\nexports.batchLayout = batchLayout;\nexports.createBatcher = createBatcher;\nexports.createCrossfader = createCrossfader;\nexports.createDomMotionComponent = createDomMotionComponent;\nexports.createMotionComponent = createMotionComponent;\nexports.domAnimation = domAnimation;\nexports.domMax = domMax;\nexports.flushLayout = flushLayout;\nexports.isValidMotionProp = isValidMotionProp;\nexports.m = m;\nexports.motion = motion;\nexports.motionValue = motionValue;\nexports.resolveMotionValue = resolveMotionValue;\nexports.snapshotViewportBox = snapshotViewportBox;\nexports.transform = transform;\nexports.useAnimation = useAnimation;\nexports.useCycle = useCycle;\nexports.useDeprecatedAnimatedState = useAnimatedState;\nexports.useDeprecatedInvertedScale = useInvertedScale;\nexports.useDomEvent = useDomEvent;\nexports.useDragControls = useDragControls;\nexports.useElementScroll = useElementScroll;\nexports.useIsPresent = useIsPresent;\nexports.useMotionTemplate = useMotionTemplate;\nexports.useMotionValue = useMotionValue;\nexports.usePresence = usePresence;\nexports.useReducedMotion = useReducedMotion;\nexports.useSpring = useSpring;\nexports.useTransform = useTransform;\nexports.useVelocity = useVelocity;\nexports.useViewportScroll = useViewportScroll;\nexports.visualElement = visualElement;\n"],"names":["Object","defineProperty","exports","value","tslib","React","heyListen","styleValueTypes","popmotion","sync","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","React__namespace","React__default","sync__default","createDefinition","propNames","isEnabled","props","some","name","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","layoutAnimation","loadFeatures","features","key","Component","LazyContext","createContext","strict","featureNames","numFeatures","length","MotionConfigContext","transformPagePoint","p","isStatic","MotionContext","useVisualElementContext","useContext","visualElement","PresenceContext","useConstant","init","ref","useRef","current","usePresence","context","isPresent","onExitComplete","register","id","useUniqueId","useEffect","counter","incrementId","LayoutGroupContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","visualState","createVisualElement","config","lazyContext","parent","presenceContext","layoutId","_a","layoutGroupId","undefined","useLayoutId","visualElementRef","renderer","__assign","presenceId","blockInitialAnimation","initial","setProps","isPresenceRoot","syncRender","animationState","animateChanges","notifyUnmount","isRefObject","prototype","hasOwnProperty","call","isVariantLabels","v","Array","isArray","isVariantLabel","resolveVariantFromProps","definition","custom","currentValues","currentVelocity","variants","resolveVariant","getProps","forEachValue","getCurrent","velocity","getVelocity","getVelocity$1","checkIfControllingVariants","animate","start","whileHover","whileDrag","whileTap","whileFocus","checkIfVariantNode","Boolean","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createMotionComponent","preloadedFeatures","useRender","useVisualState","forwardRef","externalRef","i","name_1","push","createElement","useFeatures","Fragment","Provider","useCallback","instance","mount","unmount","useMotionRef","createMotionProxy","createConfig","customMotionComponentConfig","componentCache","Map","Proxy","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","valueScaleCorrection","addScaleCorrection","correctors","transformAxes","transformProps","sortTransformProps","a","b","operationKey","axesKey","transformPropSet","Set","isTransformProp","transformOriginProps","isTransformOriginProp","isForcedMotionValue","layout","isMotionValue","translateAlias","x","y","z","transformPerspective","isCSSVariable$1","startsWith","getValueAsType","type","transform","int","number","Math","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","projection","layoutState","options","transformTemplate","buildProjectionTransform","buildProjectionTransformOrigin","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","isHydrated","correctedValue","process","applyTo","num","deltaFinal","treeScale","_b","transformIsDefault","_c","enableHardwareAcceleration","_d","allowTransformNone","transformString","sort","transformHasZ","numTransformKeys","trim","buildTransform","buildTransformOrigin","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","emotionIsPropValid_1","calcOrigin$1","origin","offset","progressToPixels","progress","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","__rest","attrs","dimensions","totalPathLength","calcSVGTransformOrigin","totalLength","spacing","useDashCase","buildSVGPath","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","CAMEL_CASE_PATTERN","camelToDash","str","replace","toLowerCase","renderHTML","element","setProperty","camelCaseAttributes","renderSVG","renderState","setAttribute","scrapeMotionValuesFromProps$1","newValues","scrapeMotionValuesFromProps","toUpperCase","isAnimationControls","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","scrapeMotionValues","values","motionValues","isControllingVariants","isVariantNode","variantToSet","resolved","transitionEnd","transition","svgMotionConfig","getBBox","getBoundingClientRect","tagName","getTotalLength","AnimationType","htmlMotionConfig","createDomMotionConfig","baseConfig","addDomEvent","eventName","handler","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","eventHandler","listener","button","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal_1","openVertical_1","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","makeRenderlessComponent","hook","gestureAnimations","onTap","onTapStart","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","getInstance","onPointerCancel","pipe","Focus","onHoverStart","onHoverEnd","shallowCompare","next","prev","prevLength","secondsToMilliseconds","seconds","easingLookup","linear","easeIn","easeInOut","easeOut","circIn","circInOut","circOut","backIn","backInOut","backOut","anticipate","bounceIn","bounceInOut","bounceOut","easingDefinitionToFunction","invariant","__read","x1","y1","x2","y2","cubicBezier","isEasingArray","ease","isAnimatable","complex","underDampedSpring","stiffness","damping","restDelta","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","duration","keyframes","defaultTransitions","backgroundColor","color","getDefaultTransition","valueKey","transitionFactory","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","filter","WebkitFilter","getDefaultValueType","getAnimatableNone","defaultValueType","legacyRepeatWarning","getPopmotionAnimationOptions","__spreadArray","from","hydrateKeyframes","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","isTransitionDefined","times","yoyo","flip","loop","map","warning","convertTransitionToAnimationOptions","isZero","parseFloat","getZeroUnit","potentialUnitType","getValueTransition","startAnimation","onComplete","delayTimer","controls","valueTransition","isTargetAnimatable","isOriginAnimatable","onUpdate","inertia","stop","getAnimation","getDelayFromTransition","setTimeout","clearTimeout","addUniqueItem","arr","item","removeItem","index","splice","SubscriptionManager","this","subscriptions","add","_this","notify","c","numSubscriptions","getSize","clear","MotionValue","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","render","getFrameData","delta","timestamp","postRender","scheduleVelocityCheck","velocityCheck","hasAnimated","isNaN","onChange","subscription","clearListeners","onRenderRequest","attach","passiveEffect","getPrevious","velocityPerSecond","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","percent","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","setVariants","variantLabels","reverse","variant","getVariant","variantChildren","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","getOrigin","animateVisualElement","notifyAnimationStart","animations","animateVariant","all","resolvedDefinition","animateTarget","notifyAnimationComplete","transitionOverride","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","_e","_f","animationTypeState","getState","valueTarget","shouldBlockAnimation","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","_loop_1","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","variantsHaveChanged","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","delete","apply","fallbackAnimation_1","fallbackTarget","getBaseTarget","shouldAnimate","isAnimated","setAnimateFunction","makeAnimator","subscribe","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","update","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","cancelSync","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","noop","any","convertBoundingBoxToAxisBox","min","max","axisBox","zeroDelta","translate","originPoint","eachAxis","isNear","maxDistance","calcLength","axis","calcOrigin","sourceLength","targetLength","clamp","updateAxisDelta","updateBoxDelta","defaultOrigin","calcRelativeAxis","relative","applyConstraints","elastic","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","getBoundingBox","topLeft","bottomRight","transformBoundingBox","compareByDepth","depth","isProjecting","shouldResetTransform","collectProjectingAncestors","ancestors","updateLayoutMeasurement","box","getLayoutState","notifyBeforeLayoutMeasure","measureViewportBox","layoutCorrected","notifyLayoutMeasure","prevViewportBox","rebaseProjectionTarget","snapshotViewportBox","calcRelativeOffsetAxis","calcRelativeOffset","isDraggable","_dragX","resetAxis","originAxis","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","applyAxisTransforms","final","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","applyBoxTransforms","finalBox","removePointDelta","removeAxisTransforms","removeAxisDelta","removeBoxTransforms","unresolvedJobs","pushJob","stack","job","pointer","batchLayout","flushLayout","reads","writes","setRead","setWrite","numStacks","executeJob","lastPointerEvent","elementDragControls","WeakMap","VisualElementDragControls","isDragging","currentDirection","constraints","hasMutatedConstraints","cursorProgress","openGlobalLock","panSession","enableLayoutProjection","originEvent","snapToCursor","stopMotion","initialPoint","getViewportPointFromEvent","cancelLayout","read","write","children","addChild","collectProjectingChildren","tree","hasManuallySetCursorOrigin","isLayoutDrag","lockProjectionTarget","resetTransform","restoreTransform","getAxisMotionValue","isExternalDrag","scheduleUpdateLayoutProjection","axisValue","flushSync","preRender","resolveDragConstraints","dragPropagation","onDragStart","dragDirectionLock","lockThreshold","direction","abs","getCurrentDirection","onDirectionLock","updateAxis","onDrag","dragConstraints","resolveRefConstraints","layoutBox","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","calcViewportConstraints","userConstraints","convertAxisBoxToBoundingBox","cancelDrag","unlockProjectionTarget","animateDragEnd","onDragEnd","shouldDrag","length_1","center","updateAxisMotionValue","updateVisualElementAxis","nextValue","axisLayout","axisLength","axisProgress","calcConstrainedMinPoint","setProjectionTargetAxis","_g","dragMomentum","remainingProps","dragKey","_dragY","dragTransition","isRelative","projectionParent","getProjectionParent","getLatestValues","convertToRelativeProjection","relativeConstraints_1","targetFinal","momentumAnimations","bounceStiffness","bounceDamping","timeConstant","startAxisValueAnimation","startLayoutAnimation","onDragTransitionEnd","stopLayoutAnimation","currentValue","boxProgress","updateConstraints","calcPositionFromProgress","onReady","stopPointerListener","dragListener","stopResizeListener","stopLayoutUpdateListener","onLayoutUpdate","prevDragCursor","Presence","VisibilityAction","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","groupDragControls","dragControls","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","match","exec","parseCSSVariable","token","fallback","getComputedStyle","getPropertyValue","pixelsToPercent","pixels","varToken","borderCorrectionDefinition","latest","_layoutState","defaultScaleCorrectors","boxShadow","original","containsCSSVariables","cssVariables","shadow","template","createTransformer","xScale","yScale","averageScale","output","i_1","cssVariable","_super","arguments","frameTarget","currentAnimationTarget","stopAxisAnimation","isAnimatingTree","originBox","targetBox","visibilityAction","shouldStackAnimate","prevParent","safeToRemove","prevId","nextId","prevParentViewportBox","parentLayout","getLayoutId","isProvidedCorrectDataForRelativeSharedLayout","boxHasMoved","isZeroBox","axisIsEqual","isTargetLocked","animateAxis","setVisibility","Show","notifyLayoutAnimationComplete","__extends","componentDidMount","animateMotionValue","unsubLayoutReady","layoutSafeToRemove","componentWillUnmount","layoutProgress","getProjectionAnimationProgress","frame","tweenAxis","unsubscribeProgress","layoutTransition","defaultLayoutTransition","zeroAxis","defaultHandler","layoutReady","notifyLayoutReady","createBatcher","queue","flush","order","presence","Present","assignProjectionToSnapshot","SharedLayoutContext","FramerTreeLayoutContext","isSharedLayout","forceUpdate","Measure","syncLayout","framerSyncLayout","onUnmount","remove","getSnapshotBeforeUpdate","syncUpdate","componentDidUpdate","layoutAnimations","createLayoutState","deltaTransform","zeroLayout","buildLayoutProjectionTransform","latestTransform","identityProjection","buildLayoutProjectionTransformOrigin","names","updateLayoutDeltas","treePath","treeLength","node","applyTreeDeltas","FlatTree","isDirty","treeType","build","renderInstance","readValueFromInstance","removeValueFromRenderState","unsubscribeFromLeadVisualElement","crossfader","projectionTargetProgress","removeFromVariantTree","lifecycles","managers","propSubscriptions","clearAllListeners","manager","updatePropListeners","on","propListener","args","_i","createLifecycles","leadProjection","leadLatestValues","hasViewportBoxUpdated","valueSubscriptions","prevMotionValues","baseTarget","isProjectionReady","triggerBuild","valuesToRender","crossfadedValues","getCrossfadeState","notifyUpdate","updateTreeLayoutProjection","layoutTree","fireUpdateLayoutProjection","initialMotionValues","path","isVisible","isMounted","newInstance","pointTo","addVariantChild","updateLayoutProjection","closestVariantNode","getClosestVariantNode","other","getStaticValue","setStaticValue","visibility","scheduleRender","canMutate","removeValue","removeOnChange","latestValue","removeOnRenderRequest","bindToMotionValue","defaultValue","newProps","prevValue","existingValue","updateMotionValuesFromProps","startAtParent","context_1","numVariantProps","variantProps","setCrossfader","newCrossfader","relativeTarget","withTransform","viewportBox","notifySetAxisTarget","force","shouldRebase","relativeOffset","setCurrentViewportBox","notifyLayoutUpdate","prevTreeScaleX","prevTreeScaleY","prevDeltaTransform","notifyViewportBoxUpdate","fireResolveRelativeTargetBox","foundParent","ancestor","resolveRelativeTargetBox","relativeParent","parentProjection","calcRelativeBox","_layoutResetTransform","newLead","onSetAxisTarget","onLayoutAnimationComplete","Entering","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","removedTransforms","removeNonTranslationalTransform","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","originComputedStyle","targetBbox","convertChangedValueTypes","unitConversion","hasPositionalKey","parseDomVariant","HTMLElement","resolveCSSVariables","htmlConfig","domElement","defaultType","computedStyle","compareDocumentPosition","mutableState","parsed","isProjectionTranform","htmlVisualElement","svgVisualElement","getAttribute","_element","createDomVisualElement","featureBundle","motion","m","getPresenceId","PresenceChild","presenceAffectsLayout","presenceChildren","newChildrenMap","childId","allComplete","isComplete","_","getChildKey","createCrossfader","lead","follow","crossfadeOpacity","preserveFollowOpacity","prevOptions","leadState","followState","finalCrossfadeFrame","prevUpdate","startCrossfadeAnimation","hasUpdated","updateCrossfade","latestLeadValues","latestFollowValues","prevValues","leadTargetOpacity","followTargetOpacity","easeCrossfadeIn","easeCrossfadeOut","hasFollowElement","numBorders","borderLabel","borders","followRadius","getRadius","leadRadius","mixColor","mixValues","fromLead","toLead","initialProgress","reset","setOptions","newOptions","compress","easing","radiusName","layoutStack","leadIsExiting","prevState","needsCrossfadeAnimation","getLead","updateSnapshot","clearSnapshot","updateLeadAndFollow","Exiting","shouldCrossfade","getFollowLayout","AnimateSharedLayout","stacks","hasMounted","updateScheduled","renderScheduled","syncContext","scheduleUpdate","removeChild","shouldComponentUpdate","updateStacks","getStack","hasRotate","resetValues","resetRotate","addToStack","removeFromStack","contextType","isLazyBundle","domAnimation","domMax","useMotionValue","setLatest_1","useState","useOnChange","useCombineMotionValues","combineValues","updateValue","unsubscribe","useMultiOnChange","getMixer","isCustomValueType","useImmediate","argOffset","inputValue","inputRange","outputRange","interpolator","interpolate","mixer","useTransform","input","inputRangeOrTransformer","transformer","useListTransform","numValues","createScrollMotionValues","scrollX","scrollY","scrollXProgress","scrollYProgress","setProgress","maxOffset","createScrollUpdater","getOffsets","xOffset","yOffset","xMaxOffset","yMaxOffset","viewportScrollValues","getViewportScrollOffsets","pageXOffset","pageYOffset","document","body","clientWidth","innerWidth","clientHeight","innerHeight","prefersReducedMotion","hasListeners","animationControls","pendingAnimations","subscribers","animations_1","setValues","DragControls","componentControls","nativeEvent","createDragControls","createObject","stateVisualElement","_state","initialState","invertScale","hasWarned","AnimatePresence","exitBeforeEnter","forceRender","unloadingRef","forcedRenderCount","setForcedRenderCount","useForceUpdate","layoutContext","filteredChildren","filtered","Children","isValidElement","onlyElements","presentChildren","allChildren","exiting","updateChildLookup","childrenToRender","presentKeys","targetKeys","numPresent","insertionIndex","removeIndex","findIndex","presentChild","cloneElement","LazyMotion","setIsLoaded","loadedRenderer","loadedFeatures","MotionConfig","transitionDependency","toString","createDomMotionComponent","useAnimation","useCycle","items","setItem","wrap","useDeprecatedAnimatedState","setAnimationState","animationDefinition","useDeprecatedInvertedScale","parentScaleX","parentScaleY","useDragControls","useElementScroll","updateScrollValues","scrollLeft","scrollTop","scrollWidth","offsetWidth","scrollHeight","offsetHeight","getElementScrollOffsets","scrollListener","passive","resizeListener","useIsPresent","useMotionTemplate","fragments","numFragments","useReducedMotion","matchMedia","motionMediaQuery_1","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","shouldReduceMotion","setShouldReduceMotion","useSpring","activeSpringAnimation","useVelocity","newVelocity","useViewportScroll","addEventListeners"],"sourceRoot":""}