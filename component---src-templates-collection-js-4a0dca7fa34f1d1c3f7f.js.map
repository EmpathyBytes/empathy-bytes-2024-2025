{"version":3,"file":"component---src-templates-collection-js-4a0dca7fa34f1d1c3f7f.js","mappings":"0OAoCe,SAASA,EAAcC,GAElC,OADgBC,EAAAA,EAAAA,GAAc,qBAGtBC,EAAAA,cAAA,WAASC,UAAU,YACfD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAIL,EAAMM,IAAKC,MAAO,CAACC,eAAe,OAAQC,MAAM,YACtDP,EAAAA,cAACQ,EAAAA,EAAc,KACXR,EAAAA,cAACS,EAAAA,GAAI,CACDC,WAAS,EAACC,QAAW,EACrBC,WAAa,SACbC,eAAe,iBAEfb,EAAAA,cAACS,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GACXf,EAAAA,cAAA,OAAKC,UAAU,YAAYe,IAAKlB,EAAMmB,OAE1CjB,EAAAA,cAACS,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GACXf,EAAAA,cAAA,MAAIC,UAAU,YAAYH,EAAMoB,OAChClB,EAAAA,cAAA,SAAG,MAAIF,EAAMqB,QACbnB,EAAAA,cAAA,OAAKC,UAAY,UAAUmB,wBAAyB,CAAEC,OAAQvB,EAAMwB,QACpEtB,EAAAA,cAAA,SAAIF,EAAMyB,WAU9BvB,EAAAA,cAAA,WAASC,UAAU,YACfD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAIL,EAAMM,IAAKC,MAAO,CAACC,eAAe,OAAQC,MAAM,YACtDP,EAAAA,cAACQ,EAAAA,EAAc,KACXR,EAAAA,cAACS,EAAAA,GAAK,CACFC,WAAS,EAACC,QAAS,EACnBC,WAAW,UAEXZ,EAAAA,cAACS,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GACPf,EAAAA,cAAA,OAAKC,UAAU,YAAYe,IAAKlB,EAAMmB,OAE9CjB,EAAAA,cAACS,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,GACXf,EAAAA,cAAA,MAAIC,UAAU,YAAYH,EAAMoB,OAChClB,EAAAA,cAAA,SAAG,MAAIF,EAAMqB,SAEjBnB,EAAAA,cAACS,EAAAA,GAAI,CAACK,MAAI,EAACC,GAAI,IACXf,EAAAA,cAAA,OAAKC,UAAU,UAAUmB,wBAAyB,CAAEC,OAAQvB,EAAMwB,QAClEtB,EAAAA,cAAA,SAAIF,EAAMyB,UAS1C,CC1EA,MAAMb,EAAY,CACdc,QAAS,QAET,cAAiB,UAGfC,EAAkB,CACpB,aAAgB,SAChB,cAAiB,GACjB,cAAiB,qBACjBlB,MAAO,WAyFX,MAtFA,SAAmBmB,GAAY,IAAX,KAAEC,GAAMD,EACxB,MAAME,EAAaD,EAAKC,WAClBC,EAAYF,EAAKE,UAAUC,cAAcC,cAE/C,OACI/B,EAAAA,cAACgC,EAAAA,EAAM,KACHhC,EAAAA,cAAA,aAAQ4B,EAAWV,OACnBlB,EAAAA,cAAA,OAAKK,MAAOK,GACRV,EAAAA,cAAA,MAAIK,MAAOoB,GAAkBG,EAAWV,OACxClB,EAAAA,cAAA,OAAKoB,wBAAyB,CAAEC,OAAQO,EAAWN,KAAKW,aACxDjC,EAAAA,cAAA,UACC6B,EAAUK,KAAKC,GACZnC,EAAAA,cAACH,EAAa,CACVoB,IAAK,0CAA4CkB,EAAEL,cAAcM,YAAYC,IAAIjC,IACjFc,MAAOiB,EAAEjB,MACTC,OAAQgB,EAAEG,aACVf,KAAMY,EAAEI,kBACRjB,KAAMa,EAAEK,YACRpC,IAAK,YAAcwB,EAAWa,KAAKC,MAAQP,EAAEM,KAAKC,WAO1E,C","sources":["webpack://empathy-bytes-2023/./src/components/interviewcard.js","webpack://empathy-bytes-2023/./src/templates/collection.js"],"sourcesContent":["import React from \"react\";\n\nimport { Link } from \"gatsby\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport \"../styles/components/interviewcard.css\";\nimport Grid from \"@mui/material/Grid\";\nimport { CardActionArea } from '@mui/material';\n\n\n/**\n * This component is used on each collection page (../templates/collection.js) to \n * house individual interview titles, authors, photos, \n * and descriptions. Each component is a grid row.\n * \n * @param {*} props \n * @returns the card component\n */\n\n// TODO: change styling to use css \n\n// const col = {\n//     padding: 10,\n// };\n\n// const row = {\n//     [\"borderBottom\"]: '5px solid #b3a369',\n//     padding: 15,\n//     [\"font-family\"]: 'Roboto',\n// };\n\n// const summary = {\n//     ['line-clamp']: 3,\n//     ['text-overflow']: 'ellipsis',\n//     overflow: 'hidden',\n// }\n\nexport default function InterviewCard(props) {\n    const matches = useMediaQuery('(min-width:800px)');\n    if (matches) {\n        return (\n            <section className=\"int_card\">\n                <Link to={props.url} style={{textDecoration:\"none\", color:\"inherit\"}}>\n                    <CardActionArea>\n                        <Grid \n                            container spacing = {2}\n                            alignItems = \"center\"\n                            justifyContent=\"space-between\"\n                        >\n                            <Grid item xs={4}>\n                                <img className=\"img-style\" src={props.img}/>\n                            </Grid>\n                            <Grid item xs={8}>\n                                <h2 className=\"ep_title\">{props.title}</h2>\n                                <p>By {props.author}</p>\n                                <div className = \"summary\" dangerouslySetInnerHTML={{ __html: props.body}}/>\n                                <p>{props.date}</p>\n                            </Grid>\n\n                        </Grid>\n                    </CardActionArea>\n                </Link>\n            </section>\n        );\n    } else {\n        return (\n            <section className=\"int_card\">\n                <Link to={props.url} style={{textDecoration:\"none\", color:\"inherit\"}}>\n                    <CardActionArea>\n                        <Grid //component borrowed from MUI\n                            container spacing={2}\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={4}>\n                                    <img className=\"img-style\" src={props.img}/>\n                            </Grid>\n                            <Grid item xs={8}>\n                                <h2 className=\"ep_title\">{props.title}</h2>\n                                <p>By {props.author}</p>\n                            </Grid>\n                            <Grid item xs={12}>                \n                                <div className=\"summary\" dangerouslySetInnerHTML={{ __html: props.body}}/>\n                                <p>{props.date}</p>               \n                            </Grid>\n                        </Grid>\n                    </CardActionArea>\n                </Link>\n            </section>\n        );\n    }\n    \n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from \"../components/layout\";\nimport InterviewCard from '../components/interviewcard';\nimport \"../styles/fonts.css\"\n\n/**\n * Functional Collection Component\n * This function will find all the collection components on the drupal site and create a page\n * on the gatsby site for each component. This is the page accessed when\n * the card component in clicked.\n */\n\n// TODO: Move this styling to a separate file \n\nconst container = {\n    padding: \"5% 5%\",\n    // paddingTop: \"10%\",\n    [\"font-family\"]: 'Roboto',\n};\n\nconst collection_name = {\n    [\"text-align\"]: 'center',\n    ['padding-top']: 10,\n    ['font-family']: 'Roboto Slab, serif',\n    color: '#b3a369',\n}\n\nfunction Collection({ data }) {\n    const collection = data.collection;\n    const interview = data.interview.relationships.node__article;\n\n    return (\n        <Layout>\n            <title>{collection.title}</title>\n            <div style={container}>\n                <h1 style={collection_name}>{collection.title}</h1>\n                <div dangerouslySetInnerHTML={{ __html: collection.body.processed }} />\n                <p></p>\n                {interview.map((i) => (\n                    <InterviewCard\n                        img={\"https://empathybytes.library.gatech.edu\" + i.relationships.field_image.uri.url}\n                        title={i.title}\n                        author={i.field_author}\n                        date={i.field_hg_dateline}\n                        body={i.field_blurb}\n                        url={\"/projects\" + collection.path.alias + i.path.alias}\n                    />\n                ))}\n\n            </div>\n        </Layout>\n    );\n}\n\n\n\n// These are the graphql queries to pull the drupal site data\nCollection.propTypes = {\n    data: PropTypes.object.isRequired,\n};\n\n/**\n * This query first pulls all collection data by title. Then, the interviews \n * with the same collection id are pulled.\n */\nexport const query = graphql`\n    query ($CollectionTitle: String!) {\n        collection: nodeCollection(title: { eq: $CollectionTitle }) {\n            id\n            title\n            body {\n                processed\n            }\n            path {\n                alias\n            }\n            relationships {\n                field_image {\n                    uri {\n                        url\n                        value\n                    }\n                }\n            }\n        }\n        interview: taxonomyTermTags(name: {eq: $CollectionTitle }) {\n              relationships {\n                node__article {\n                        path {\n                            alias\n                        }\n                        id\n                        title\n                        field_author\n                        field_hg_dateline\n                        field_blurb\n                        body {\n                            processed\n                        }\n                        \n                        relationships {\n                            field_image {\n                                uri {\n                                    url\n                                }\n                            }\n                        }\n\n                    }\n                }\n        }\n    }\n`;\nexport default Collection;"],"names":["InterviewCard","props","useMediaQuery","React","className","Link","to","url","style","textDecoration","color","CardActionArea","Grid","container","spacing","alignItems","justifyContent","item","xs","src","img","title","author","dangerouslySetInnerHTML","__html","body","date","padding","collection_name","_ref","data","collection","interview","relationships","node__article","Layout","processed","map","i","field_image","uri","field_author","field_hg_dateline","field_blurb","path","alias"],"sourceRoot":""}